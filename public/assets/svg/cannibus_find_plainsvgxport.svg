<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="102"
   height="152"
   viewBox="0 0 26.987499 40.216666"
   version="1.1"
   id="svg4666"
   sodipodi:docname="cannibus_find_plainsvg.svg"
   inkscape:export-filename="../../../../../var/www/html/assets/svg/cannibus_find_plainsvg.svg"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview18"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     showgrid="false" />
  <defs
     id="defs4663">
    <meshgradient
       id="meshgradient1019"
       gradientUnits="userSpaceOnUse"
       x="274.77042"
       y="520.77264"
       gradientTransform="matrix(0.25875303,0,0,0.26161413,-69.942065,-114.04728)">
      <meshrow
         id="meshrow1021">
        <meshpatch
           id="meshpatch1023">
          <stop
             path="c 32.9364,0  65.8729,0  98.8093,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop1025" />
          <stop
             path="c 0,22.6258  0,45.2515  0,67.8773"
             style="stop-color:#c4b67e;stop-opacity:1"
             id="stop1027" />
          <stop
             path="c -32.9364,0  -65.8729,0  -98.8093,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop1029" />
          <stop
             path="c 0,-22.6258  0,-45.2515  0,-67.8773"
             style="stop-color:#c4b67e;stop-opacity:1"
             id="stop1031" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <script
       id="mesh_polyfill"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
  </defs>
  <path
     d="m 11.801994,0.268726 c -0.0036,0.0097 -0.01553,0.06164 -0.02748,0.114804 -0.01196,0.05318 -0.04901,0.170403 -0.08367,0.25983 -0.03466,0.08942 -0.08247,0.219931 -0.105183,0.290031 -0.02391,0.07009 -0.08965,0.262226 -0.145821,0.428995 -0.130277,0.380667 -0.158957,0.470102 -0.191239,0.598201 l -0.02629,0.102715 -0.09084,-0.0036 -0.09084,-0.0036 -0.0084,0.03383 c -0.0036,0.01813 -0.01195,0.05318 -0.0179,0.07614 -0.0251,0.10514 -0.04662,0.287619 -0.04662,0.392753 0,0.06284 -0.0036,0.114802 -0.0084,0.114802 -0.006,0 -0.03945,-0.0085 -0.07531,-0.01813 -0.03586,-0.0097 -0.06932,-0.01813 -0.07291,-0.01813 -0.0048,0 -0.01674,0.02297 -0.02749,0.04954 -0.0514,0.13053 -0.09443,0.422978 -0.08845,0.603037 l 0.0036,0.126888 -0.03108,0.0036 c -0.01674,0.0024 -0.06693,-0.01329 -0.11116,-0.03384 -0.04422,-0.01933 -0.08844,-0.03626 -0.09681,-0.03626 -0.05379,0 -0.08606,0.378247 -0.04901,0.571606 0.02869,0.148644 0.02989,0.154687 0.01076,0.161928 -0.0096,0.0036 -0.05977,-0.0072 -0.111156,-0.02538 -0.11595,-0.03989 -0.15061,-0.03989 -0.16016,-0.0048 -0.0251,0.09547 0.01,0.407255 0.0645,0.589731 0.0227,0.07132 0.0311,0.118432 0.0239,0.125684 -0.007,0.0072 -0.0526,0.006 -0.1243,-0.0024 -0.16495,-0.02056 -0.15061,-0.02901 -0.15061,0.07855 10e-4,0.236855 0.0347,0.511183 0.0729,0.601806 0.0239,0.05438 0.0466,0.13052 0.0406,0.136563 -0.002,0.0036 -0.0538,-0.0036 -0.11236,-0.01452 -0.15418,-0.02779 -0.17809,-0.02658 -0.19483,0.01332 -0.0263,0.06767 0.0251,0.413287 0.0789,0.528094 0.0275,0.05921 0.0478,0.146216 0.0395,0.169178 -0.007,0.01693 -0.0239,0.01813 -0.14582,0.01209 l -0.13745,-0.0085 v 0.04472 c 0,0.05559 0.0765,0.39758 0.10757,0.482176 0.0131,0.03504 0.043,0.09426 0.0657,0.132923 0.0227,0.03868 0.0418,0.07493 0.0418,0.08096 0,0.02417 -0.0442,0.03264 -0.1506,0.02659 l -0.11235,-0.006 v 0.04108 c 0,0.07614 0.10518,0.489423 0.13266,0.524474 0.0191,0.02417 0.0837,0.201814 0.0789,0.215104 -0.004,0.0097 -0.043,0.01452 -0.12312,0.01452 h -0.11833 l 10e-4,0.06647 c 0.002,0.134135 0.10878,0.466456 0.20439,0.638059 0.0311,0.05801 0.0383,0.08097 0.0287,0.09063 -0.008,0.0085 -0.0598,0.01693 -0.11594,0.02177 -0.055,0.0036 -0.10638,0.01206 -0.11355,0.01933 -0.0155,0.0157 0.0179,0.154687 0.0622,0.251356 0.0179,0.03989 0.061,0.140197 0.0956,0.223571 0.0347,0.08218 0.0968,0.217521 0.13864,0.298491 0.0873,0.169194 0.0896,0.158303 -0.0478,0.186104 -0.11116,0.02174 -0.12072,0.03383 -0.0896,0.12568 0.0586,0.178855 0.26893,0.577646 0.3789,0.720239 l 0.0251,0.03142 -0.0741,0.01572 c -0.11117,0.02174 -0.14105,0.04109 -0.14105,0.08943 0,0.08096 0.22949,0.490631 0.38725,0.691229 0.0897,0.113614 0.0897,0.118433 0,0.132953 -0.037,0.0048 -0.0645,0 -0.10757,-0.01933 -0.0789,-0.03627 -0.0956,-0.03385 -0.17091,0.0169 -0.0358,0.02417 -0.0765,0.04351 -0.0896,0.0411 -0.0215,-0.0036 -0.0251,-0.01329 -0.0287,-0.07009 -0.0119,-0.284001 -0.0478,-0.676741 -0.0681,-0.771006 -0.0108,-0.0435 -0.0622,-0.03383 -0.17211,0.03625 -0.0299,0.01933 -0.0574,0.03383 -0.061,0.03383 -0.005,0 -0.0119,-0.124468 -0.0155,-0.276735 -0.012,-0.377036 -0.0383,-0.564346 -0.0861,-0.605438 -0.0167,-0.01449 -0.0872,0.02297 -0.20081,0.103926 -0.0311,0.02297 -0.061,0.04108 -0.0669,0.04108 -0.005,0 -0.0131,-0.09426 -0.0167,-0.209061 -0.007,-0.204229 -0.0251,-0.364944 -0.0633,-0.537769 -0.0227,-0.108758 -0.0323,-0.109961 -0.17212,-0.02658 -0.0562,0.03384 -0.10638,0.05921 -0.11355,0.0568 -0.006,-0.0024 -0.0155,-0.06647 -0.0203,-0.1426 -0.0251,-0.380678 -0.0765,-0.640487 -0.13029,-0.657405 -0.0131,-0.0048 -0.0669,0.01209 -0.13625,0.0423 -0.0621,0.02778 -0.12071,0.04833 -0.13028,0.04471 -0.0108,-0.0048 -0.0179,-0.03988 -0.0239,-0.111173 -0.0143,-0.172811 -0.0681,-0.349255 -0.18287,-0.592145 l -0.0418,-0.09065 -0.0406,0.03022 c -0.10279,0.07855 -0.20319,0.140173 -0.2247,0.136563 -0.0215,-0.0036 -0.0263,-0.01452 -0.0323,-0.09428 -0.0108,-0.134127 -0.11116,-0.455583 -0.17808,-0.56555 -0.0323,-0.05197 -0.0657,-0.05076 -0.17451,0.0097 -0.0478,0.02658 -0.092,0.04833 -0.0968,0.04833 -0.006,0 -0.0179,-0.03989 -0.0251,-0.08701 -0.0335,-0.198194 -0.19602,-0.601825 -0.24503,-0.611492 -0.0119,-0.0024 -0.0574,0.01813 -0.10278,0.04472 -0.12311,0.07613 -0.13507,0.07009 -0.16375,-0.08338 -0.0275,-0.14743 -0.13984,-0.42054 -0.20558,-0.4991 -0.0287,-0.03384 -0.0633,-0.02417 -0.1506,0.03988 -0.0454,0.03262 -0.0885,0.06043 -0.0968,0.06043 -0.0251,0 -0.037,-0.0266 -0.0526,-0.113611 -0.0227,-0.128084 -0.1757,-0.473705 -0.26534,-0.598188 -0.0454,-0.06525 -0.0753,-0.06404 -0.15778,0.0036 -0.0813,0.06647 -0.11474,0.0858 -0.12908,0.0713 -0.006,-0.006 -0.0167,-0.04108 -0.0215,-0.07855 -0.0263,-0.158303 -0.20558,-0.500298 -0.2749,-0.523252 -0.0167,-0.0048 -0.0418,0.0072 -0.0849,0.04109 -0.0837,0.06766 -0.098,0.06524 -0.12431,-0.02056 -0.0406,-0.128102 -0.19363,-0.416924 -0.23067,-0.43022 -0.007,-0.0036 -0.0347,0.01088 -0.0586,0.03022 -0.0251,0.01933 -0.0526,0.03384 -0.0622,0.03262 -0.01,-0.0024 -0.0287,-0.03625 -0.043,-0.07612 -0.0143,-0.03989 -0.0789,-0.154695 -0.14461,-0.253781 -0.0645,-0.100303 -0.17332,-0.281583 -0.24265,-0.40484 -0.0681,-0.123267 -0.13626,-0.236866 -0.15179,-0.253779 -0.0155,-0.01693 -0.0311,-0.04954 -0.0358,-0.07251 -0.012,-0.05921 -0.10041,-0.254982 -0.19961,-0.443515 -0.0897,-0.169175 -0.13148,-0.229597 -0.13866,-0.194557 -0.0108,0.058 0.2044,1.085212 0.26774,1.277342 l 0.0299,0.09064 -0.0263,0.03505 c -0.0299,0.04109 -0.0251,0.06647 0.0394,0.224769 0.0371,0.09184 0.0394,0.119646 0.0275,0.248952 -0.007,0.07129 -0.006,0.07492 0.0705,0.227188 0.043,0.0858 0.0789,0.16314 0.0789,0.171601 0,0.01813 -0.0131,0.02174 -0.0992,0.03625 -0.0586,0.0097 -0.0574,0.02417 0.0156,0.192156 0.0323,0.07492 0.0597,0.14259 0.0597,0.149836 0,0.0072 0.0143,0.02901 0.0311,0.04713 0.0167,0.01813 0.0418,0.05681 0.055,0.0846 0.0131,0.02779 0.0311,0.05681 0.0406,0.06525 0.0239,0.01933 0.0215,0.06768 -0.005,0.08218 -0.0108,0.006 -0.0454,0.01449 -0.0765,0.01933 -0.0741,0.01088 -0.0837,0.02417 -0.061,0.08822 0.0418,0.126894 0.14701,0.297283 0.26414,0.430217 0.0335,0.03867 0.0622,0.07735 0.0622,0.08579 0,0.0085 -0.0227,0.01813 -0.0502,0.02297 -0.0275,0.0048 -0.0729,0.01813 -0.10161,0.03142 -0.0514,0.02297 -0.0514,0.02297 -0.0478,0.08097 0.004,0.04712 0.0179,0.08096 0.0789,0.178852 0.10518,0.167972 0.18526,0.275527 0.24861,0.332329 0.0323,0.02779 0.0514,0.05438 0.0478,0.06405 -0.004,0.0097 -0.0406,0.03625 -0.0825,0.06043 -0.1016,0.05679 -0.12191,0.07975 -0.10519,0.122056 0.0335,0.08821 0.14343,0.235651 0.30718,0.407236 0.12909,0.135354 0.12909,0.153484 0.01,0.198194 -0.0896,0.03263 -0.10398,0.04955 -0.0956,0.108771 0.005,0.02657 0.0251,0.07007 0.0454,0.09667 0.0849,0.111184 0.24861,0.280356 0.36336,0.377044 0.0681,0.05679 0.12191,0.109961 0.11952,0.117218 -0.002,0.0072 -0.0382,0.03746 -0.0813,0.06889 l -0.0765,0.05558 10e-4,0.05923 c 0.001,0.04108 0.006,0.0592 0.0179,0.0592 0.0299,0.0013 0.0442,0.01693 0.0383,0.0423 -0.005,0.01933 0,0.02415 0.0215,0.02415 0.0179,0 0.0729,0.04593 0.17689,0.148649 0.0825,0.08217 0.18408,0.172812 0.22472,0.200603 0.043,0.0302 0.0753,0.06163 0.0753,0.07371 0,0.01329 -0.0335,0.03867 -0.0968,0.07251 -0.0526,0.029 -0.10159,0.06283 -0.10757,0.07492 -0.0191,0.03626 0.0167,0.08703 0.16614,0.23324 0.16614,0.163142 0.27013,0.25015 0.3502,0.291242 0.0323,0.0157 0.0586,0.03383 0.0586,0.03867 0,0.0072 -0.12311,0.113596 -0.15897,0.137769 -0.007,0.0048 0.004,0.02174 0.0251,0.03988 0.0215,0.01813 0.0359,0.03747 0.0323,0.04229 -0.004,0.006 0.0383,0.04472 0.0921,0.08702 0.055,0.04109 0.13985,0.109969 0.18884,0.151061 0.049,0.04109 0.14344,0.112382 0.20798,0.157091 0.0657,0.04471 0.12071,0.08822 0.12311,0.09669 0.004,0.0084 -0.0299,0.03987 -0.0741,0.0725 -0.092,0.06646 -0.10637,0.0991 -0.0645,0.145008 0.0753,0.08097 0.38846,0.296089 0.55818,0.383089 0.061,0.03142 0.0861,0.05076 0.0861,0.06647 0,0.01329 -0.0275,0.04713 -0.061,0.07734 l -0.0598,0.05318 0.0717,0.08097 c 0.0777,0.08579 0.0897,0.12568 0.0586,0.194563 -0.0251,0.0568 -0.0466,0.03866 -0.18764,-0.154693 -0.0968,-0.134134 -0.24982,-0.291228 -0.32273,-0.332328 l -0.049,-0.02779 -0.0227,0.03988 c -0.043,0.07493 -0.1028,0.154692 -0.11595,0.154692 -0.008,0 -0.0263,-0.02297 -0.0406,-0.05196 -0.043,-0.08462 -0.11714,-0.176445 -0.2522,-0.31301 -0.17451,-0.176433 -0.19243,-0.178845 -0.26654,-0.03746 -0.0203,0.03867 -0.0454,0.0713 -0.0562,0.07372 -0.012,0.0024 -0.0502,-0.03262 -0.0992,-0.09185 -0.0849,-0.102723 -0.42432,-0.41329 -0.45061,-0.41329 -0.004,0 -0.0323,0.04108 -0.0645,0.09063 -0.0347,0.05438 -0.0669,0.09064 -0.0789,0.09064 -0.0108,0 -0.0598,-0.04954 -0.10997,-0.112389 -0.049,-0.06285 -0.11833,-0.137769 -0.15419,-0.167977 -0.0681,-0.05801 -0.20319,-0.154693 -0.21514,-0.154693 -0.005,0 -0.0359,0.04835 -0.0705,0.108769 -0.0335,0.05921 -0.0681,0.108756 -0.0753,0.10756 -0.007,0 -0.043,-0.03384 -0.0789,-0.07493 -0.11593,-0.132937 -0.24263,-0.23686 -0.42072,-0.345619 l -0.0442,-0.02659 -0.0729,0.109978 c -0.0395,0.05922 -0.0741,0.108755 -0.0753,0.108755 -10e-4,0 -0.0645,-0.06283 -0.14103,-0.13898 -0.18528,-0.182465 -0.36815,-0.304529 -0.41596,-0.27673 -0.0107,0.0072 -0.0406,0.05438 -0.0669,0.105138 -0.0705,0.135343 -0.0658,0.134137 -0.15061,0.04712 -0.1004,-0.10513 -0.25578,-0.201807 -0.45658,-0.285199 -0.12311,-0.05196 -0.13746,-0.04833 -0.16973,0.03746 -0.0395,0.105147 -0.0514,0.108771 -0.14104,0.0411 -0.0729,-0.0568 -0.22351,-0.13294 -0.37053,-0.189736 -0.14701,-0.05679 -0.22351,-0.05317 -0.22351,0.0097 0,0.01209 -0.004,0.02177 -0.007,0.02177 -0.005,0 -0.0538,-0.02177 -0.11116,-0.04712 -0.0562,-0.0254 -0.1781,-0.06889 -0.27012,-0.09547 -0.092,-0.02659 -0.25579,-0.07735 -0.36455,-0.111183 -0.33945,-0.107558 -0.61675,-0.180051 -0.80082,-0.21027 l -0.0418,-0.0072 0.0358,0.03022 c 0.0383,0.03263 0.0514,0.04108 0.37053,0.235642 0.28447,0.172817 0.62273,0.396382 0.87492,0.577664 0.22232,0.159507 0.22471,0.161927 0.23426,0.25497 0.005,0.0423 0.0143,0.0846 0.0215,0.09306 0.007,0.0085 0.0526,0.03505 0.1016,0.05921 0.049,0.02297 0.11714,0.06285 0.15179,0.08944 0.0347,0.02538 0.0956,0.06404 0.13746,0.08579 0.0406,0.02174 0.0741,0.04713 0.0741,0.05681 0,0.01088 -0.0167,0.03866 -0.0358,0.06405 -0.0203,0.02538 -0.0359,0.05317 -0.0359,0.06284 0,0.04712 0.17571,0.165555 0.41237,0.275522 0.0765,0.03505 0.13744,0.0713 0.13744,0.08098 0,0.0084 -0.0108,0.03625 -0.0239,0.06041 -0.049,0.09185 -0.0215,0.140183 0.11952,0.209066 0.043,0.02056 0.0861,0.0423 0.0956,0.04714 0.0119,0.006 0.0191,0.03141 0.0215,0.0713 0.004,0.05195 0.01,0.06645 0.0359,0.08459 0.0633,0.04472 0.33586,0.182476 0.38606,0.195782 0.0885,0.02415 0.0885,0.029 0.008,0.124468 -0.0837,0.100295 -0.10997,0.151054 -0.0896,0.175229 0.0406,0.04955 0.37769,0.180051 0.56773,0.219937 0.0418,0.0084 0.0789,0.02294 0.0825,0.03021 0.002,0.0085 -0.0191,0.05196 -0.049,0.09667 -0.0299,0.04352 -0.055,0.09064 -0.055,0.10394 0,0.03383 0.13984,0.120839 0.25698,0.159514 0.0526,0.01813 0.17571,0.05197 0.27372,0.07492 0.098,0.02417 0.18287,0.04592 0.18764,0.04955 0.006,0.0036 -0.0119,0.05075 -0.0394,0.103934 -0.0538,0.107542 -0.0538,0.119628 0.0119,0.158303 0.0633,0.03746 0.25459,0.07855 0.45659,0.0979 0.10757,0.01086 0.2008,0.02417 0.20677,0.03019 0.008,0.0085 -0.004,0.03747 -0.0323,0.08581 -0.0633,0.103927 -0.0562,0.130507 0.0502,0.166769 0.14821,0.05197 0.19841,0.06042 0.40041,0.07251 0.11116,0.006 0.20678,0.01693 0.21396,0.02417 0.007,0.0072 0.005,0.03263 -0.01,0.07251 -0.0203,0.05799 -0.0203,0.06283 -10e-4,0.08458 0.0394,0.04471 0.34303,0.08701 0.65978,0.09305 0.18884,0.0036 0.20319,0.006 0.2008,0.02659 -0.002,0.01209 -0.007,0.04471 -0.0107,0.07371 -0.0108,0.06526 0.008,0.08701 0.10876,0.128102 0.10398,0.04229 0.24503,0.06647 0.45659,0.07975 0.10039,0.0048 0.19242,0.01693 0.20557,0.02417 0.0168,0.0084 0.0251,0.02538 0.0251,0.04833 0,0.107557 0.22829,0.194565 0.57373,0.218741 0.17928,0.01209 0.22232,0.01933 0.25697,0.0423 0.0132,0.0097 0.0323,0.0169 0.0442,0.0169 0.0119,0 0.0371,0.02177 0.055,0.04835 0.0335,0.04955 0.0801,0.0737 0.18287,0.09667 0.0885,0.01813 0.44344,0.07009 0.54504,0.07975 0.0765,0.006 0.10877,0.0157 0.17689,0.05318 0.10399,0.05679 0.19244,0.08459 0.46616,0.146224 0.2486,0.05558 0.51514,0.126878 0.54263,0.14501 0.0203,0.01329 -0.001,0.01209 -0.35737,-0.01933 -0.10877,-0.0097 -0.22471,-0.01813 -0.25937,-0.01813 h -0.0622 l 0.0167,0.04108 c 0.0108,0.0254 0.0131,0.04472 0.006,0.04956 -0.006,0.0036 -0.0741,-0.006 -0.15179,-0.02297 -0.16136,-0.03262 -0.40878,-0.05921 -0.5056,-0.05316 -0.0693,0.0036 -0.0681,0.0036 -0.0586,0.07009 0.006,0.03746 -0.0108,0.03746 -0.13148,-0.006 -0.0825,-0.03022 -0.29882,-0.06526 -0.51276,-0.08338 -0.0801,-0.0073 -0.0873,-0.006 -0.0813,0.01329 0.0251,0.08943 0.0311,0.129306 0.0215,0.138975 -0.006,0.006 -0.049,-0.0036 -0.10637,-0.02538 -0.0992,-0.03746 -0.32032,-0.07856 -0.49005,-0.09185 l -0.0992,-0.0084 v 0.09788 c 0,0.05439 -0.002,0.09788 -0.004,0.09788 -0.002,0 -0.0359,-0.01088 -0.0753,-0.02415 -0.21633,-0.07614 -0.47212,-0.116015 -0.52949,-0.08459 -0.0251,0.01329 -0.0275,0.02054 -0.0203,0.07855 0.008,0.07371 0.001,0.102712 -0.0263,0.102712 -0.01,0 -0.0693,-0.01693 -0.13267,-0.03746 -0.19961,-0.06525 -0.46255,-0.07613 -0.51634,-0.02174 -0.0179,0.01813 -0.0227,0.03987 -0.0227,0.105129 0,0.12568 -0.005,0.128094 -0.14942,0.09063 -0.10159,-0.02658 -0.14701,-0.03141 -0.30718,-0.03262 -0.18048,-0.0013 -0.18884,0 -0.21514,0.02658 -0.0239,0.02417 -0.0275,0.03746 -0.0239,0.113603 0.004,0.09667 -0.005,0.109967 -0.0622,0.09304 -0.0669,-0.02054 -0.251,-0.04712 -0.31913,-0.04712 -0.0885,0 -0.19123,0.02054 -0.21275,0.04229 -0.0131,0.01329 -0.0144,0.03263 -0.005,0.102728 0.007,0.06041 0.007,0.08821 -10e-4,0.09063 -0.007,0.0024 -0.11473,0.0072 -0.24023,0.01088 -0.21155,0.0048 -0.28686,0.01572 -0.32511,0.04713 -0.008,0.006 -0.0155,0.03748 -0.0155,0.0701 0,0.06767 -0.0108,0.07613 -0.1016,0.08942 -0.11116,0.0157 -0.43029,0.109967 -0.64543,0.192155 -0.0586,0.02297 -0.15897,0.06042 -0.22112,0.08458 -0.18646,0.06888 -0.44464,0.181273 -0.50201,0.218731 -0.0526,0.03384 -0.0526,0.03384 -0.0239,0.04593 0.0167,0.006 0.32989,0.0157 0.72313,0.02174 0.38127,0.006 0.71595,0.01572 0.74224,0.02056 0.0275,0.006 0.0657,0.02294 0.0861,0.03746 0.049,0.03505 0.12432,0.04592 0.36098,0.05558 0.22947,0.0085 0.2474,0.01209 0.25696,0.04592 0.0227,0.07976 0.0323,0.09185 0.0933,0.112397 0.0502,0.0169 0.0825,0.01933 0.19242,0.01086 0.0729,-0.006 0.16017,-0.01086 0.19244,-0.01086 l 0.0598,-0.0013 0.0131,0.05318 c 0.0156,0.06646 0.0514,0.105141 0.10877,0.113596 0.0908,0.01572 0.4781,-0.029 0.6299,-0.0713 0.14821,-0.0423 0.15537,-0.03868 0.16494,0.06647 0.006,0.05436 0.0131,0.07129 0.0406,0.09425 0.0574,0.04591 0.14941,0.02659 0.41953,-0.08822 0.24742,-0.105148 0.27611,-0.103934 0.29643,0.0169 0.0179,0.109975 0.10757,0.113596 0.37292,0.01329 0.0908,-0.03382 0.19603,-0.07128 0.23307,-0.08095 0.0645,-0.01813 0.0717,-0.01813 0.13625,0.0036 l 0.0669,0.02297 0.3012,-0.15227 c 0.18527,-0.09547 0.32033,-0.157107 0.3538,-0.161929 0.0753,-0.01088 0.14223,-0.03988 0.37411,-0.157104 0.13148,-0.06768 0.23546,-0.111176 0.29881,-0.126888 0.11235,-0.029 0.14702,-0.04472 0.23187,-0.108764 0.0347,-0.02658 0.0681,-0.04712 0.0741,-0.04712 0.006,0 10e-4,0.02417 -0.0119,0.05437 -0.0287,0.06526 -0.0227,0.08943 0.0251,0.117226 0.0191,0.01088 0.0359,0.02779 0.0359,0.03625 -10e-4,0.0085 -0.0633,0.09426 -0.13865,0.190934 -0.0753,0.09667 -0.14582,0.189735 -0.15538,0.207857 -0.0263,0.04955 -0.0203,0.0858 0.0191,0.124468 0.0191,0.01933 0.0359,0.0423 0.0359,0.05196 0,0.0097 -0.0251,0.04229 -0.055,0.07372 -0.1004,0.101515 -0.32033,0.410884 -0.33586,0.471301 -0.006,0.02417 10e-4,0.03746 0.0394,0.06888 0.0454,0.03988 0.0454,0.03988 0.0299,0.0858 -0.008,0.02538 -0.0538,0.114804 -0.0992,0.199402 -0.16494,0.30815 -0.17929,0.357705 -0.11713,0.428995 0.043,0.04834 0.0418,0.0423 0.0132,0.240489 -0.0442,0.296082 -0.0442,0.95711 10e-4,1.082789 0.0203,0.05922 0.0347,0.06162 0.0598,0.0097 0.012,-0.02297 0.0717,-0.149855 0.13387,-0.281565 0.13506,-0.283993 0.26296,-0.505145 0.3263,-0.564354 0.0251,-0.02417 0.0633,-0.07856 0.0861,-0.12084 0.0753,-0.143825 0.14941,-0.246545 0.25817,-0.357718 0.0908,-0.09305 0.12432,-0.117226 0.21156,-0.159508 0.1255,-0.06043 0.14583,-0.0846 0.27969,-0.340789 0.125495,-0.240502 0.176901,-0.314207 0.24383,-0.346835 0.02988,-0.01452 0.06335,-0.03625 0.07529,-0.04833 0.01195,-0.01209 0.03945,-0.02177 0.05976,-0.02177 0.03347,0 0.04184,-0.0072 0.06575,-0.05558 0.01674,-0.03384 0.05258,-0.176443 0.08725,-0.344423 0.03227,-0.159517 0.06574,-0.303321 0.07292,-0.321445 0.01196,-0.03384 0.01196,-0.03384 0.04064,-0.01088 0.04183,0.03262 0.0753,0.01933 0.101594,-0.0423 0.02031,-0.04472 0.02988,-0.101506 0.05379,-0.303323 0.0084,-0.06888 0.03586,-0.06888 0.04542,-0.0013 0.01074,0.08097 0.02868,0.449553 0.04303,0.89184 0.0072,0.222365 0.02031,0.578861 0.02988,0.791551 0.0095,0.212687 0.02272,0.63928 0.02988,0.948646 0.01793,0.866466 0.03705,1.57463 0.04184,1.583088 0.0023,0.0048 0.0084,0.483376 0.01196,1.064644 0.0095,1.185516 0.0179,1.549236 0.04063,1.591566 0.01912,0.0362 0.08964,0.0665 0.131478,0.0568 0.02988,-0.006 0.08844,-0.0592 0.130285,-0.116 0.03824,-0.052 0.03944,-0.14501 0.0084,-0.82296 -0.01553,-0.367382 -0.04542,-1.133545 -0.06574,-1.70151 -0.01912,-0.56799 -0.04064,-1.18552 -0.0478,-1.371606 -0.03587,-1.005454 -0.04064,-1.241103 -0.04064,-1.854996 0,-0.711781 0.006,-0.815715 0.05139,-0.862845 0.03466,-0.03383 0.04661,-0.01813 0.08128,0.116026 0.01552,0.06162 0.03944,0.135338 0.05139,0.163121 0.01912,0.04352 0.02869,0.05197 0.06813,0.05802 0.06813,0.01209 0.09921,0.03141 0.13267,0.08459 0.03825,0.06042 0.149409,0.316613 0.175704,0.404827 0.0251,0.08581 0.06573,0.170402 0.08606,0.177657 0.0095,0.0036 0.049,-0.01572 0.08964,-0.04351 0.04064,-0.02659 0.07889,-0.04955 0.08725,-0.04955 0.0072,0 0.02629,0.03142 0.04184,0.06889 0.03585,0.08942 0.190049,0.384293 0.254582,0.489433 0.04781,0.07612 0.05379,0.08096 0.118333,0.1003 0.120721,0.03383 0.180483,0.09909 0.619139,0.676741 0.223511,0.29486 0.296415,0.380662 0.31793,0.380662 0.04064,0 0.01793,-0.167975 -0.07769,-0.581273 -0.03943,-0.171593 -0.06095,-0.287619 -0.06095,-0.338372 0,-0.09667 -0.03467,-0.227193 -0.09682,-0.360122 -0.0251,-0.05558 -0.04661,-0.107544 -0.04661,-0.116008 0,-0.0072 0.01434,-0.02177 0.03108,-0.03021 0.0502,-0.0278 0.05378,-0.04834 0.02272,-0.12569 -0.03706,-0.09304 -0.178097,-0.350451 -0.221125,-0.407239 -0.04781,-0.06043 -0.04541,-0.07856 0.01555,-0.09789 0.02869,-0.01088 0.0514,-0.02658 0.05379,-0.03867 0.0096,-0.05076 -0.129084,-0.270698 -0.297618,-0.471301 -0.05857,-0.07009 -0.106373,-0.136552 -0.106373,-0.149855 0,-0.01449 0.01674,-0.03019 0.0478,-0.04471 0.02869,-0.01329 0.0478,-0.03021 0.0478,-0.04228 0,-0.01209 -0.05736,-0.08581 -0.126691,-0.164354 -0.170922,-0.193359 -0.190049,-0.221155 -0.175698,-0.235662 0.01674,-0.0169 0.05857,0.006 0.216333,0.11239 0.147018,0.09909 0.235465,0.146224 0.339453,0.178852 0.04303,0.01329 0.193632,0.08096 0.333473,0.14985 0.141038,0.07009 0.279694,0.132942 0.309575,0.138975 0.02988,0.0072 0.09202,0.0097 0.138639,0.0048 0.09562,-0.0072 0.118333,-0.0024 0.302405,0.07735 0.06933,0.029 0.173313,0.06647 0.230689,0.08338 0.0992,0.0278 0.108759,0.02901 0.145815,0.01088 0.03106,-0.01449 0.04063,-0.029 0.0502,-0.07008 0.01552,-0.07372 0.04302,-0.07251 0.246222,0.01449 0.09322,0.0411 0.215148,0.0846 0.271318,0.0991 0.131477,0.03262 0.158965,0.02417 0.180485,-0.05559 0.02749,-0.09909 0.04063,-0.101506 0.259366,-0.03745 0.103996,0.03142 0.231882,0.06405 0.284471,0.07372 0.05258,0.0084 0.10996,0.02054 0.129084,0.02538 0.0275,0.006 0.03944,0 0.08008,-0.04109 0.02631,-0.02657 0.04782,-0.05921 0.04782,-0.07249 0,-0.05198 0.02629,-0.0556 0.176896,-0.0254 0.10398,0.02177 0.179283,0.02901 0.297621,0.02901 0.144627,0 0.160157,-0.0024 0.191236,-0.0278 0.08964,-0.07251 0.07529,-0.06889 0.308374,-0.06526 0.125501,0.0024 0.239044,-0.0024 0.270126,-0.0097 0.03108,-0.0072 0.320323,-0.0169 0.69802,-0.02415 0.607179,-0.0097 0.758979,-0.01933 0.787662,-0.04834 0.01912,-0.01933 -0.108767,-0.07251 -0.640644,-0.264664 -0.109968,-0.03987 -0.295227,-0.111181 -0.412357,-0.159517 -0.117137,-0.04833 -0.260572,-0.105127 -0.319128,-0.128097 -0.135069,-0.05075 -0.142241,-0.058 -0.135069,-0.113592 0.0048,-0.03262 0,-0.05076 -0.01434,-0.06284 -0.0514,-0.04592 -0.396823,-0.12326 -0.50559,-0.11239 -0.08366,0.0085 -0.09442,-0.0048 -0.07889,-0.09064 0.01195,-0.06888 -0.0013,-0.102712 -0.04782,-0.120837 -0.01672,-0.006 -0.129077,-0.01572 -0.248608,-0.01933 l -0.217526,-0.0072 0.006,-0.08702 0.0072,-0.08579 -0.04064,-0.01813 c -0.03108,-0.01329 -0.10398,-0.01693 -0.319138,-0.01693 -0.245013,0.0013 -0.277285,-0.0013 -0.270115,-0.01813 0.0036,-0.0097 0.0095,-0.04713 0.01314,-0.08097 l 0.0072,-0.06404 -0.05617,-0.02417 c -0.112361,-0.04834 -0.230681,-0.04471 -0.480494,0.01452 -0.147019,0.03505 -0.149404,0.03262 -0.141041,-0.07976 0.0084,-0.08822 0.0072,-0.08944 -0.0263,-0.111186 -0.02869,-0.01933 -0.05736,-0.02297 -0.190046,-0.02297 -0.142232,0 -0.164937,0.0036 -0.276097,0.03867 -0.06694,0.02174 -0.127889,0.03988 -0.135059,0.03988 -0.01434,0 -0.01314,-0.03142 0.006,-0.154687 l 0.006,-0.04108 -0.06932,0.0084 c -0.216352,0.02417 -0.359773,0.05438 -0.504406,0.10756 -0.02868,0.01086 -0.05378,0.01931 -0.05617,0.01931 -0.0023,0 -0.0013,-0.02415 0.0023,-0.05317 0.006,-0.04471 0.0036,-0.05558 -0.01434,-0.06526 -0.04064,-0.02174 -0.21514,0.01693 -0.403994,0.08822 -0.129084,0.04835 -0.138645,0.05076 -0.138645,0.01933 0,-0.05559 -0.05498,-0.06043 -0.260569,-0.01813 -0.101594,0.02054 -0.135064,0.01572 -0.07291,-0.01088 0.05259,-0.02297 0.223511,-0.05921 0.441045,-0.09305 0.08845,-0.01329 0.190043,-0.03262 0.224711,-0.0435 0.05977,-0.01693 0.06215,-0.01933 0.06215,-0.05922 0,-0.02901 0.0072,-0.04472 0.02391,-0.05438 0.03107,-0.0169 0.180486,-0.04109 0.36455,-0.06042 0.272516,-0.02901 0.419534,-0.07252 0.50559,-0.149855 0.07172,-0.06646 0.115937,-0.07855 0.36455,-0.103929 0.276097,-0.029 0.341841,-0.04109 0.393234,-0.07614 0.03347,-0.02294 0.03945,-0.03625 0.04303,-0.08096 0.0023,-0.03021 0.0096,-0.06042 0.01553,-0.06767 0.006,-0.0072 0.07172,-0.01693 0.150602,-0.02177 0.245029,-0.01449 0.46257,-0.06767 0.56535,-0.135344 0.06454,-0.0435 0.06813,-0.06405 0.02272,-0.136555 -0.02031,-0.03383 -0.03466,-0.0701 -0.03108,-0.07976 0.0036,-0.0097 0.03227,-0.01933 0.06455,-0.02417 0.277287,-0.03625 0.63826,-0.141376 0.690844,-0.198191 0.01555,-0.01813 0.01314,-0.029 -0.0251,-0.103913 -0.0502,-0.102723 -0.0502,-0.102723 0.113549,-0.138985 0.17212,-0.03867 0.362156,-0.102721 0.513958,-0.176436 l 0.135064,-0.06526 -0.03944,-0.04833 c -0.08008,-0.09789 -0.08606,-0.10756 -0.07888,-0.124476 0.0036,-0.0097 0.03107,-0.01936 0.06813,-0.02417 0.07649,-0.0097 0.395623,-0.117224 0.491243,-0.166781 0.09323,-0.04712 0.09323,-0.07008 0.0048,-0.186097 -0.09324,-0.124468 -0.09085,-0.131717 0.05857,-0.181272 0.120724,-0.03987 0.389646,-0.17039 0.48288,-0.234441 0.105178,-0.07251 0.107574,-0.09183 0.01552,-0.188511 -0.03944,-0.0423 -0.07292,-0.08218 -0.07292,-0.08822 0,-0.01813 0.04423,-0.04712 0.215166,-0.141389 0.157754,-0.08701 0.241425,-0.141395 0.374105,-0.239278 l 0.08127,-0.05921 -0.06096,-0.06526 c -0.08127,-0.08701 -0.07888,-0.109967 0.01793,-0.148644 0.125503,-0.04954 0.448212,-0.281576 0.448212,-0.321446 0,-0.0085 -0.01912,-0.03868 -0.04183,-0.06768 -0.02272,-0.029 -0.04184,-0.05922 -0.04184,-0.06768 0,-0.0084 0.03945,-0.03745 0.08726,-0.06525 0.121921,-0.0701 0.272524,-0.171604 0.323914,-0.216313 0.0502,-0.04471 0.05498,-0.08219 0.01793,-0.135341 -0.01434,-0.01933 -0.02391,-0.03747 -0.0215,-0.03989 0.0023,-0.0024 0.08605,-0.06284 0.184069,-0.132931 0.222315,-0.160731 0.337052,-0.229606 0.49722,-0.299695 0.219932,-0.09547 0.66336,-0.253784 0.79005,-0.280377 0.01793,-0.0036 0.04662,-0.01931 0.06455,-0.03503 l 0.03347,-0.02779 -0.02989,-0.01693 c -0.0478,-0.02779 -0.418326,-0.02177 -0.638248,0.01088 -0.441045,0.06526 -0.745843,0.122064 -0.821145,0.153489 -0.04183,0.01813 -0.08963,0.03866 -0.107564,0.04592 -0.02869,0.01209 -0.03706,0.0097 -0.06693,-0.01933 -0.04184,-0.04109 -0.08009,-0.04109 -0.192443,-0.0024 -0.130282,0.04472 -0.272513,0.118433 -0.368133,0.192156 -0.117132,0.08942 -0.127891,0.09183 -0.156579,0.03503 -0.01314,-0.02538 -0.03467,-0.0568 -0.049,-0.06889 -0.0251,-0.02297 -0.0263,-0.02297 -0.08247,0.0036 -0.107566,0.05317 -0.296409,0.188522 -0.376493,0.270703 -0.04424,0.04591 -0.08248,0.08217 -0.08487,0.07975 -0.0023,-0.0024 -0.01912,-0.04834 -0.03705,-0.101507 -0.01793,-0.05317 -0.03705,-0.101506 -0.04183,-0.107552 -0.02391,-0.02417 -0.213956,0.06888 -0.345433,0.170384 -0.02868,0.02177 -0.098,0.08218 -0.154178,0.134145 -0.05619,0.05076 -0.10997,0.09304 -0.120724,0.09304 -0.01195,0 -0.03586,-0.03262 -0.06215,-0.08217 -0.02272,-0.04471 -0.0514,-0.09062 -0.06215,-0.101506 -0.01912,-0.01933 -0.02272,-0.01933 -0.06335,0.0013 -0.109965,0.05196 -0.406384,0.329901 -0.439852,0.409667 -0.0095,0.02538 -0.02391,0.04471 -0.02988,0.04471 -0.01912,0 -0.06813,-0.08339 -0.09084,-0.153484 -0.01076,-0.03503 -0.02868,-0.07491 -0.04063,-0.08942 l -0.02031,-0.02538 -0.07651,0.05921 c -0.102785,0.07735 -0.276097,0.245321 -0.31793,0.309367 -0.04184,0.06285 -0.07769,0.105137 -0.08964,0.105137 -0.006,0 -0.03227,-0.03262 -0.05856,-0.07251 -0.03587,-0.05317 -0.05618,-0.07251 -0.0765,-0.07251 -0.05259,0 -0.386064,0.364957 -0.455392,0.497888 -0.02388,0.04471 -0.04661,0.08339 -0.05259,0.08701 -0.0048,0.0036 -0.02031,-0.01933 -0.03466,-0.05074 -0.04065,-0.09063 -0.09562,-0.171614 -0.117137,-0.171614 -0.04422,0 -0.328694,0.310588 -0.441055,0.482194 -0.06692,0.10271 -0.0992,0.117209 -0.118323,0.05558 -0.02153,-0.0713 -0.03824,-0.09547 -0.0992,-0.136562 -0.03467,-0.02297 -0.06335,-0.04591 -0.06335,-0.05195 0,-0.0048 0.04184,-0.03143 0.09323,-0.05922 0.233074,-0.129303 0.513953,-0.331123 0.556989,-0.400006 0.01912,-0.03142 0.01912,-0.03263 -0.01315,-0.058 -0.01793,-0.01452 -0.05259,-0.03867 -0.0753,-0.05317 -0.02269,-0.01572 -0.04183,-0.03505 -0.04183,-0.04471 0,-0.0097 0.06694,-0.06043 0.14941,-0.112397 0.253383,-0.161927 0.537857,-0.393952 0.537857,-0.438662 0,-0.0097 -0.04064,-0.04714 -0.08965,-0.08338 -0.04899,-0.03747 -0.08963,-0.07493 -0.08963,-0.0846 0,-0.0097 0.02031,-0.0278 0.04541,-0.04109 0.09801,-0.05075 0.468537,-0.398784 0.468537,-0.441089 0,-0.01088 -0.0251,-0.03747 -0.05498,-0.0592 -0.09921,-0.06889 -0.103991,-0.07493 -0.09563,-0.101506 0.0048,-0.01452 0.06575,-0.07856 0.136262,-0.143817 0.192438,-0.176446 0.313161,-0.296077 0.351402,-0.348052 0.03108,-0.04471 0.03227,-0.04833 0.01436,-0.06887 -0.02153,-0.02417 -0.117135,-0.06405 -0.18646,-0.07613 -0.102787,-0.01933 -0.08247,-0.0701 0.09921,-0.257413 0.176894,-0.183679 0.291641,-0.327488 0.320329,-0.406035 0.01793,-0.04713 -0.0072,-0.06768 -0.118336,-0.09788 -0.136259,-0.03627 -0.141033,-0.04955 -0.05737,-0.130524 0.09801,-0.09546 0.308387,-0.427792 0.308387,-0.485805 0,-0.02417 -0.02513,-0.03746 -0.119533,-0.06162 -0.04304,-0.01088 -0.08247,-0.02417 -0.08845,-0.03022 -0.01076,-0.01088 0.01315,-0.04833 0.149399,-0.225982 0.101599,-0.131715 0.20798,-0.311782 0.227097,-0.381873 0.01555,-0.06042 0.0023,-0.07614 -0.0741,-0.08458 -0.06574,-0.0085 -0.118333,-0.03505 -0.118333,-0.06043 0,-0.0097 0.01436,-0.02901 0.03107,-0.04592 0.06216,-0.05681 0.26893,-0.352878 0.326314,-0.466473 0.02988,-0.05921 0.0251,-0.06284 -0.06813,-0.0725 -0.138655,-0.01452 -0.142239,-0.0411 -0.02629,-0.227201 0.145815,-0.234435 0.204383,-0.37583 0.16614,-0.399993 -0.0096,-0.006 -0.04063,-0.01933 -0.07053,-0.02901 -0.05617,-0.01931 -0.07291,-0.04591 -0.04541,-0.0737 0.03467,-0.03626 0.07052,-0.09668 0.139845,-0.236858 0.09681,-0.196982 0.09801,-0.204232 0.04542,-0.227193 -0.05976,-0.02538 -0.06335,-0.05196 -0.02031,-0.138975 0.02031,-0.04109 0.05378,-0.118425 0.07291,-0.172794 0.117135,-0.323888 0.209179,-0.513616 0.366943,-0.760135 0.113551,-0.177647 0.145826,-0.240494 0.145826,-0.281575 0,-0.02174 0.006,-0.03021 0.02391,-0.03021 0.0251,0 0.03347,-0.02901 0.01195,-0.04229 -0.02272,-0.01452 -0.131483,0.0592 -0.265346,0.181262 -0.144622,0.131718 -0.455393,0.472512 -0.513959,0.563135 -0.02391,0.03869 -0.04661,0.05922 -0.06933,0.06285 -0.06096,0.01329 -0.26056,0.251354 -0.31793,0.37825 -0.03705,0.0858 -0.06096,0.09304 -0.120719,0.03746 l -0.0275,-0.02417 -0.02987,0.0278 c -0.04304,0.04109 -0.158973,0.240471 -0.194828,0.335944 -0.01674,0.04473 -0.03467,0.08822 -0.04183,0.09548 -0.02031,0.02778 -0.05379,0.0169 -0.09563,-0.03263 -0.02272,-0.02659 -0.04661,-0.04835 -0.05378,-0.04835 -0.04662,0 -0.199608,0.292448 -0.224712,0.430208 -0.0048,0.0254 -0.01434,0.05075 -0.0215,0.05561 -0.0072,0.0048 -0.04064,-0.0073 -0.07531,-0.0266 -0.08485,-0.04834 -0.10398,-0.04713 -0.142232,0.01452 -0.09203,0.147433 -0.192429,0.381865 -0.205579,0.480965 -0.006,0.03988 -0.01315,0.07613 -0.01674,0.07975 -0.01076,0.0097 -0.05139,-0.01449 -0.127894,-0.07491 -0.08007,-0.06285 -0.120706,-0.06889 -0.15417,-0.02056 -0.07889,0.113595 -0.162559,0.340783 -0.182884,0.497888 -0.0072,0.0568 -0.01674,0.107542 -0.0215,0.113595 -0.0048,0.0048 -0.05378,-0.02054 -0.109967,-0.05801 -0.05498,-0.03624 -0.109957,-0.06646 -0.120716,-0.06646 -0.02629,0 -0.147013,0.245315 -0.201998,0.41088 -0.03108,0.09546 -0.03824,0.13413 -0.03945,0.235652 -0.0013,0.119639 -0.0013,0.120842 -0.03107,0.124471 -0.01793,0.0024 -0.05738,-0.01329 -0.09681,-0.03746 -0.09802,-0.05922 -0.115953,-0.06164 -0.154183,-0.02056 -0.05977,0.06526 -0.143435,0.371 -0.143435,0.52447 0,0.04351 -0.0036,0.08098 -0.0096,0.0846 -0.0048,0.0024 -0.05618,-0.02297 -0.114741,-0.0568 -0.120724,-0.0701 -0.126701,-0.0701 -0.176899,0.02297 -0.06574,0.122048 -0.164942,0.470097 -0.169727,0.600608 -0.0048,0.122049 -0.0251,0.128092 -0.157772,0.04228 -0.04064,-0.02538 -0.08127,-0.04349 -0.09083,-0.03987 -0.04901,0.01933 -0.107574,0.240481 -0.129084,0.491837 -0.01076,0.130519 -0.01912,0.17886 -0.03108,0.17886 -0.0023,0 -0.04065,-0.02294 -0.08487,-0.05197 -0.04541,-0.029 -0.08725,-0.05559 -0.09562,-0.06041 -0.0096,-0.006 -0.0263,0.0157 -0.0502,0.06646 -0.02988,0.06526 -0.04661,0.135346 -0.09084,0.372204 -0.0048,0.02297 -0.01195,0.128099 -0.01674,0.233239 -0.006,0.105122 -0.01314,0.193351 -0.01674,0.198183 -0.0048,0.0036 -0.02868,-0.0072 -0.05258,-0.02417 -0.0251,-0.01693 -0.06933,-0.04834 -0.09801,-0.06768 -0.07052,-0.05075 -0.100406,-0.04833 -0.126701,0.006 -0.0478,0.10272 -0.08964,0.418138 -0.08964,0.677947 0,0.08217 -0.0023,0.148644 -0.006,0.148644 -0.0036,0 -0.05499,-0.0278 -0.113554,-0.06164 -0.126693,-0.07371 -0.13267,-0.07129 -0.160176,0.04714 -0.02868,0.125685 -0.04182,0.244104 -0.04899,0.47371 -0.0036,0.116015 -0.0096,0.229619 -0.01314,0.250168 l -0.006,0.03987 -0.04422,-0.02297 c -0.04781,-0.02417 -0.109968,-0.07855 -0.109968,-0.09426 0,-0.006 0.01555,-0.04835 0.03586,-0.09427 0.02034,-0.04833 0.03586,-0.106336 0.03586,-0.136547 0,-0.04472 -0.0048,-0.05317 -0.03108,-0.06284 -0.01671,-0.0072 -0.05856,-0.01209 -0.09323,-0.01209 -0.09921,0 -0.101587,-0.01449 -0.02272,-0.140184 0.07172,-0.114806 0.26774,-0.501511 0.297607,-0.587305 0.01674,-0.04955 0.01674,-0.05317 -0.006,-0.07251 -0.01434,-0.01088 -0.05738,-0.02297 -0.09561,-0.0278 -0.107574,-0.01209 -0.109967,-0.02297 -0.03706,-0.148633 0.102787,-0.182486 0.310758,-0.677955 0.310758,-0.744413 0,-0.03506 -0.01077,-0.03868 -0.141039,-0.04955 -0.05378,-0.0048 -0.101589,-0.01329 -0.10518,-0.01933 -0.0036,-0.006 0.01793,-0.05075 0.04901,-0.0991 0.102781,-0.160722 0.282071,-0.572806 0.285655,-0.654984 l 0.0013,-0.03626 -0.131478,-0.006 c -0.129092,-0.006 -0.131475,-0.006 -0.135061,-0.03625 -0.0023,-0.01933 0.01671,-0.06285 0.05139,-0.119641 0.02988,-0.04833 0.07051,-0.128097 0.09204,-0.175229 0.03346,-0.07854 0.152988,-0.424163 0.152988,-0.443499 0,-0.0048 -0.05857,-0.006 -0.130285,-0.0024 -0.09562,0.0048 -0.131478,0.0036 -0.138655,-0.0072 -0.0048,-0.0097 0.0084,-0.04109 0.03348,-0.07734 0.105173,-0.154695 0.216333,-0.532936 0.173305,-0.592153 -0.01552,-0.02054 -0.0251,-0.02177 -0.133871,-0.0097 -0.113551,0.01329 -0.138647,0.01088 -0.138647,-0.01088 0,-0.006 0.0263,-0.05317 0.05857,-0.105132 0.100396,-0.164356 0.185262,-0.38913 0.186458,-0.493048 v -0.06043 l -0.04422,-0.0036 c -0.02391,-0.0024 -0.08725,0.0048 -0.141046,0.01452 -0.115935,0.02297 -0.155376,0.02417 -0.155376,0.006 0,-0.0072 0.0215,-0.06284 0.049,-0.122048 0.09801,-0.222354 0.166138,-0.488219 0.166138,-0.654995 0,-0.10754 0.01555,-0.100293 -0.175699,-0.07733 -0.06813,0.0072 -0.125508,0.01088 -0.129092,0.0072 -0.0036,-0.0024 0.01196,-0.04592 0.03467,-0.09547 0.08367,-0.187308 0.144632,-0.422952 0.136261,-0.532929 -0.0048,-0.06525 -0.01912,-0.06887 -0.18646,-0.03988 -0.08607,0.01572 -0.12669,0.01813 -0.136254,0.0085 -0.0084,-0.0085 -0.0048,-0.03505 0.01315,-0.08943 0.03825,-0.118425 0.05977,-0.280362 0.06813,-0.526886 0.0072,-0.210272 0.006,-0.22841 -0.01433,-0.253773 -0.02272,-0.0278 -0.02391,-0.0278 -0.100396,-0.0097 -0.0765,0.01933 -0.143427,0.02538 -0.143427,0.01329 0,-0.0036 0.01074,-0.04472 0.02272,-0.09306 0.03586,-0.131717 0.05259,-0.306946 0.04661,-0.468872 -0.0023,-0.07976 -0.0072,-0.147428 -0.01077,-0.149861 -0.0036,-0.0036 -0.03825,0.0073 -0.0777,0.02297 -0.08487,0.03625 -0.147016,0.04955 -0.160161,0.03505 -0.006,-0.006 0.0036,-0.05196 0.02031,-0.10152 0.0263,-0.07975 0.03108,-0.117221 0.03705,-0.311786 l 0.006,-0.219939 h -0.08008 c -0.04303,0 -0.07889,-0.0024 -0.07889,-0.006 0,-0.0024 0.0084,-0.03626 0.01793,-0.07492 0.01076,-0.03869 0.0215,-0.154695 0.0263,-0.25861 0.0072,-0.184907 0.0072,-0.19094 -0.0215,-0.23566 -0.02869,-0.04592 -0.02869,-0.05075 -0.0275,-0.325079 0.0013,-0.219936 0.0096,-0.35528 0.04064,-0.646519 0.02272,-0.225982 0.03586,-0.401212 0.03227,-0.453173 -0.006,-0.09064 -0.04901,-0.241687 -0.05858,-0.211492 z m 0.523525,11.233889 c 0.0084,0.04349 -0.0023,0.229598 -0.01434,0.248952 -0.01076,0.0157 -0.118328,0.01086 -0.16494,-0.0085 -0.02988,-0.01329 -0.04303,-0.0266 -0.04303,-0.04351 0,-0.04109 0.163747,-0.240489 0.197214,-0.240489 0.0096,0 0.02031,0.01933 0.0251,0.04351 z m -2.019964,0.328705 c 0.141034,0.181272 0.298809,0.427791 0.286854,0.448328 -0.0036,0.006 -0.03466,0.01449 -0.06693,0.01933 -0.03227,0.0048 -0.06335,0.01329 -0.06693,0.01933 -0.01793,0.03141 0.04423,0.159516 0.169726,0.351664 0.178085,0.269486 0.224696,0.367366 0.222321,0.459214 -0.0023,0.05801 0.0036,0.08095 0.03824,0.145018 0.149404,0.279142 0.319135,1.154076 0.316734,1.635036 -0.0023,0.309377 -0.01315,0.302127 -0.22231,-0.16072 -0.167336,-0.371001 -0.235471,-0.553471 -0.28925,-0.775833 -0.05379,-0.229611 -0.115944,-0.538977 -0.127891,-0.65015 -0.0048,-0.04109 -0.01196,-0.07854 -0.01674,-0.08097 -0.0048,-0.0036 -0.03467,0.006 -0.06575,0.01933 -0.04063,0.01813 -0.05976,0.02174 -0.06573,0.01088 -0.0048,-0.0072 -0.01195,-0.131717 -0.01553,-0.275521 -0.0096,-0.311795 -0.03108,-0.638067 -0.04542,-0.677947 -0.01,-0.02297 -0.0167,-0.0266 -0.0466,-0.02056 -0.0203,0.0036 -0.0514,0.01088 -0.0705,0.01449 -0.0335,0.0072 -0.0359,0.0048 -0.0454,-0.03867 -0.0108,-0.05439 -0.01,-0.406041 0.002,-0.484596 0.004,-0.02779 0.0144,-0.05197 0.0215,-0.05197 0.008,0 0.0466,0.0423 0.0872,0.09427 z m 1.999644,0.0713 c 0.0072,0.02538 0.01552,0.07492 0.02031,0.108756 0.006,0.05438 0.0048,0.06526 -0.01315,0.0713 -0.02034,0.0084 -0.07412,-0.01693 -0.117137,-0.05318 -0.01912,-0.0169 -0.01912,-0.02054 0.0084,-0.05558 0.01434,-0.02054 0.03705,-0.05559 0.04781,-0.07735 0.0263,-0.05075 0.03944,-0.04955 0.05378,0.006 z m 2.311612,0.174015 c -0.0013,0.01572 -0.0072,0.04471 -0.01436,0.06404 -0.01314,0.03142 -0.01793,0.03385 -0.05856,0.0278 -0.05499,-0.0097 -0.09563,-0.05316 -0.07173,-0.07734 0.01793,-0.01693 0.115947,-0.05076 0.135069,-0.04592 0.0072,0.0013 0.01076,0.01572 0.0096,0.03142 z m -6.799756,0 c 0.0645,0.02779 0.0765,0.04833 0.055,0.09063 -0.0191,0.03504 -0.055,0.04834 -0.0789,0.0278 -0.0359,-0.03021 -0.0693,-0.143814 -0.0418,-0.143814 0.006,0 0.0358,0.01088 0.0657,0.02538 z m 4.300496,0.279148 c 0.01076,0.01933 0.01672,0.113609 0.01912,0.322657 l 0.0048,0.294878 -0.04064,-0.0072 c -0.02153,-0.0036 -0.05737,-0.01088 -0.07769,-0.01572 l -0.03944,-0.0085 -0.0013,0.05922 c 0,0.03263 -0.0023,0.09426 -0.006,0.137761 -0.02868,0.395168 -0.04303,0.567985 -0.05139,0.598196 -0.04901,0.180059 -0.186468,0.596983 -0.254587,0.770998 -0.08845,0.229601 -0.256981,0.578845 -0.28089,0.58611 -0.04422,0.01329 0.01314,-0.337168 0.170927,-1.05983 0.04302,-0.195771 0.08366,-0.368583 0.08964,-0.384293 0.01433,-0.03867 0.01314,-0.09668 -0.0013,-0.106333 -0.01793,-0.01209 -0.0048,-0.07251 0.06216,-0.277952 0.03227,-0.100308 0.08964,-0.244115 0.127891,-0.320247 0.0741,-0.148644 0.126686,-0.293654 0.114737,-0.314196 -0.0036,-0.006 -0.01912,-0.01209 -0.03466,-0.01209 -0.03107,0 -0.05498,-0.02054 -0.05498,-0.04833 0,-0.02538 0.06096,-0.111181 0.130282,-0.184898 0.05976,-0.06284 0.09921,-0.0725 0.123115,-0.03022 z m -3.626376,0.392756 c 0.004,0.02297 -10e-4,0.02779 -0.0263,0.02779 -0.0251,0 -0.0311,-0.006 -0.0311,-0.03142 0,-0.02538 0.005,-0.03021 0.0275,-0.02658 0.0167,0.0024 0.0275,0.01329 0.0299,0.03021 z m 0.63586,0.577644 c 0,0.02297 -0.005,0.0423 -0.012,0.0423 -0.006,0 -0.0119,-0.01933 -0.0119,-0.0423 0,-0.02297 0.006,-0.0423 0.0119,-0.0423 0.007,0 0.012,0.01933 0.012,0.0423 z m 0.54742,0.451965 c 0.13985,0.07251 0.5307,0.392743 0.719542,0.588522 0.300014,0.311791 0.456596,0.502722 0.531888,0.646532 0.06454,0.124465 0.05617,0.131715 -0.05618,0.04592 -0.368144,-0.280369 -0.76973,-0.682776 -0.99086,-0.990937 -0.14701,-0.204234 -0.13387,-0.193362 -0.18407,-0.143814 -0.0358,0.03625 -0.0442,0.03867 -0.0586,0.02417 -0.0239,-0.02658 -0.055,-0.116 -0.055,-0.157086 0,-0.04352 0.0263,-0.04714 0.0932,-0.01332 z m 2.835133,0.415704 c 0,0.07372 -0.162559,0.258627 -0.49603,0.56436 -0.29283,0.26828 -0.381282,0.343206 -0.386059,0.327496 -0.0096,-0.029 0.18167,-0.288822 0.265346,-0.360117 0.0215,-0.01813 0.0478,-0.05076 0.05856,-0.0701 0.04064,-0.07976 0.343029,-0.363759 0.479293,-0.451965 0.07052,-0.04472 0.07889,-0.04592 0.07889,-0.0097 z m 0.185267,0.926905 c 0.0048,0.0072 -0.0096,0.01209 -0.03467,0.01209 -0.02391,0 -0.04302,-0.006 -0.04302,-0.01209 0,-0.0072 0.01552,-0.01209 0.03466,-0.01209 0.02031,0 0.03943,0.0048 0.04303,0.01209 z"
     id="path61"
     style="display:inline;fill:#008000;fill-opacity:1;stroke-width:0.26018;stroke-linejoin:miter" />
  <path
     d="m 11.805242,0.264799 c -0.0013,3.2e-5 -0.0023,0.0013 -0.0032,0.0039 -0.0036,0.0097 -0.01552,0.06164 -0.02748,0.114804 -0.01196,0.05318 -0.04901,0.170402 -0.08367,0.25983 -0.03466,0.08942 -0.08247,0.219931 -0.105183,0.29003 -0.01923,0.05637 -0.06552,0.191698 -0.112126,0.329284 h 1.97e-4 l -0.02344,13.298385 v 0 c -6.2e-5,2.61e-4 -1.27e-4,7.85e-4 -1.87e-4,10e-4 h 1.87e-4 l -7.77e-4,0.43548 v 0 c -6.2e-5,1.18e-4 -1.34e-4,2.46e-4 -1.96e-4,2.62e-4 h 1.96e-4 l -0.01501,8.513884 h 1.94e-4 c 0.0098,0.002 0.01943,0.004 0.02844,0.004 0.0061,0 0.01198,-5.2e-4 0.01734,-0.002 0.02988,-0.006 0.08844,-0.0592 0.130285,-0.116 0.03824,-0.052 0.03944,-0.14501 0.0084,-0.82296 -0.01552,-0.367381 -0.04542,-1.133544 -0.06574,-1.701508 -0.01912,-0.567991 -0.04064,-1.18552 -0.0478,-1.371606 -0.03587,-1.005454 -0.04064,-1.241103 -0.04064,-1.854996 0,-0.711782 0.006,-0.815716 0.05139,-0.862846 0.0099,-0.0097 0.01791,-0.01528 0.02515,-0.01528 0.01816,0 0.03134,0.03537 0.05613,0.131291 0.01553,0.06161 0.03944,0.135338 0.05139,0.163122 0.01912,0.04352 0.02869,0.05197 0.06813,0.05802 0.06813,0.01209 0.09921,0.03141 0.13267,0.08459 0.03825,0.06042 0.14941,0.316614 0.175704,0.404827 0.0251,0.08581 0.06573,0.170403 0.08606,0.177657 7.77e-4,2.62e-4 0.0018,5.23e-4 0.0029,5.23e-4 0.01307,0 0.0494,-0.01839 0.08674,-0.04394 0.04064,-0.02658 0.07889,-0.04955 0.08725,-0.04955 0.0072,0 0.02629,0.03142 0.04183,0.06889 0.03585,0.08942 0.190049,0.384292 0.254582,0.489432 0.04781,0.07613 0.0538,0.08096 0.118333,0.100301 0.120721,0.03383 0.180483,0.09909 0.619139,0.676741 0.223511,0.29486 0.296415,0.380661 0.31793,0.380661 0.04064,0 0.01793,-0.167974 -0.07769,-0.581272 -0.03943,-0.171593 -0.06095,-0.287619 -0.06095,-0.338372 0,-0.09667 -0.03467,-0.227194 -0.09682,-0.360122 -0.0251,-0.05558 -0.04661,-0.107545 -0.04661,-0.116008 0,-0.0072 0.01434,-0.02177 0.03108,-0.03021 0.0502,-0.0278 0.05378,-0.04834 0.02272,-0.125689 -0.03706,-0.09304 -0.178097,-0.350451 -0.221125,-0.40724 -0.04781,-0.06043 -0.04541,-0.07856 0.01555,-0.09789 0.02869,-0.01088 0.0514,-0.02659 0.05379,-0.03867 0.0096,-0.05076 -0.129084,-0.270697 -0.297618,-0.4713 -0.05857,-0.07009 -0.106373,-0.136552 -0.106373,-0.149855 0,-0.01449 0.01674,-0.0302 0.0478,-0.04471 0.02869,-0.01329 0.0478,-0.03021 0.0478,-0.04228 0,-0.01209 -0.05736,-0.08581 -0.126691,-0.164354 -0.170922,-0.193359 -0.190049,-0.221156 -0.175698,-0.235662 0.0032,-0.0032 0.0073,-0.005 0.01304,-0.005 0.02401,0 0.07581,0.03149 0.203281,0.117412 0.147019,0.09909 0.235466,0.146224 0.339453,0.178853 0.04303,0.01329 0.193633,0.08096 0.333474,0.14985 0.141038,0.07009 0.279693,0.132942 0.309574,0.138974 0.01928,0.0047 0.05202,0.0074 0.08534,0.0074 0.01829,0 0.03677,-7.85e-4 0.0533,-0.0026 0.01891,-0.0013 0.03499,-0.0024 0.05002,-0.0024 0.06091,0 0.104744,0.01577 0.252383,0.07974 0.06933,0.029 0.173313,0.06647 0.230688,0.08338 0.0562,0.01575 0.08362,0.02297 0.103579,0.02297 0.01527,0 0.02617,-0.0042 0.04224,-0.01209 0.03106,-0.01449 0.04063,-0.029 0.0502,-0.07008 0.0074,-0.03506 0.01749,-0.05317 0.04788,-0.05317 0.03354,0 0.09177,0.02203 0.198344,0.06766 0.09322,0.04109 0.215148,0.0846 0.271318,0.0991 0.04623,0.01146 0.0796,0.01787 0.104376,0.01787 0.04569,0 0.06215,-0.02174 0.07611,-0.07346 0.01545,-0.05567 0.02635,-0.08082 0.07175,-0.08082 0.0354,0 0.09177,0.01531 0.187614,0.04337 0.103995,0.03142 0.231882,0.06405 0.284471,0.07372 0.05258,0.0084 0.109959,0.02054 0.129084,0.02538 0.0057,0.0013 0.01079,0.0021 0.01558,0.0021 0.01816,0 0.03233,-0.01057 0.0645,-0.04308 0.02631,-0.02657 0.04782,-0.05921 0.04782,-0.07249 0,-0.03064 0.0091,-0.04449 0.04751,-0.04449 0.0267,0 0.06758,0.0067 0.129389,0.0191 0.10398,0.02177 0.179283,0.02901 0.297621,0.02901 0.144627,0 0.160158,-0.0024 0.191236,-0.0278 0.07008,-0.05669 0.0766,-0.06684 0.187464,-0.06684 0.03096,0 0.07004,7.85e-4 0.12091,0.0016 0.02223,5.23e-4 0.04411,5.23e-4 0.06521,5.23e-4 0.09795,0 0.179337,-0.0043 0.204915,-0.01031 0.03108,-0.0072 0.320323,-0.0169 0.69802,-0.02415 0.607179,-0.0097 0.758979,-0.01933 0.787662,-0.04834 0.01912,-0.01933 -0.108767,-0.07251 -0.640644,-0.264665 -0.109968,-0.03987 -0.295227,-0.111181 -0.412357,-0.159516 -0.117137,-0.04833 -0.260572,-0.105127 -0.319128,-0.128097 -0.135069,-0.05075 -0.142241,-0.058 -0.135069,-0.113593 0.0048,-0.03262 0,-0.05076 -0.01433,-0.06284 -0.04808,-0.04296 -0.3535,-0.113422 -0.481743,-0.113422 -0.0088,0 -0.01685,2.61e-4 -0.02386,0.001 -0.01366,0.0013 -0.02538,0.0021 -0.03537,0.0021 -0.05111,0 -0.05652,-0.02103 -0.04352,-0.09283 0.01195,-0.06888 -0.0013,-0.102712 -0.04782,-0.120837 -0.01671,-0.006 -0.129076,-0.01572 -0.248607,-0.01933 l -0.217526,-0.0072 0.006,-0.08702 0.0072,-0.08579 -0.04064,-0.01813 c -0.03108,-0.01329 -0.10398,-0.01693 -0.319139,-0.01693 -0.03393,1.78e-4 -0.06379,2.62e-4 -0.09003,2.62e-4 -0.163175,0 -0.186264,-0.0038 -0.180087,-0.01839 0.0036,-0.0097 0.0095,-0.04713 0.01314,-0.08097 l 0.0072,-0.06404 -0.05618,-0.02417 c -0.05144,-0.02211 -0.104124,-0.03336 -0.170106,-0.03336 -0.07814,0 -0.174941,0.01575 -0.310388,0.04787 -0.05138,0.01224 -0.08511,0.01991 -0.106865,0.01991 -0.04051,0 -0.03962,-0.02658 -0.03418,-0.09967 0.0084,-0.08823 0.0072,-0.08944 -0.02629,-0.111186 -0.02869,-0.01933 -0.05736,-0.02297 -0.190047,-0.02297 -0.142231,0 -0.164936,0.0036 -0.276097,0.03867 -0.06693,0.02174 -0.127888,0.03988 -0.135058,0.03988 -0.01434,0 -0.01314,-0.03142 0.006,-0.154688 l 0.006,-0.04108 -0.06932,0.0084 c -0.216351,0.02417 -0.359772,0.05438 -0.504405,0.10756 -0.02868,0.01086 -0.05378,0.01931 -0.05616,0.01931 -0.0023,0 -0.0013,-0.02415 0.0023,-0.05317 0.006,-0.04471 0.0036,-0.05558 -0.01434,-0.06526 -0.0077,-0.0041 -0.02003,-0.006 -0.03636,-0.006 -0.07045,0 -0.21432,0.03638 -0.367639,0.09427 -0.07344,0.0275 -0.108197,0.04014 -0.124512,0.04014 -0.01237,0 -0.01413,-0.0072 -0.01413,-0.0208 0,-0.03107 -0.01716,-0.04627 -0.06819,-0.04627 -0.04028,0 -0.101672,0.0095 -0.192383,0.02814 -0.04238,0.0086 -0.0729,0.01271 -0.08958,0.01271 -0.02331,0 -0.01956,-0.0081 0.01666,-0.0236 0.05259,-0.02297 0.223511,-0.05921 0.441044,-0.09305 0.08845,-0.01329 0.190044,-0.03262 0.224712,-0.0435 0.05977,-0.01693 0.06215,-0.01933 0.06215,-0.05922 0,-0.02901 0.0072,-0.04472 0.02391,-0.05438 0.03107,-0.0169 0.180486,-0.04109 0.36455,-0.06041 0.272516,-0.02901 0.419534,-0.07252 0.50559,-0.149856 0.07172,-0.06646 0.115937,-0.07855 0.364549,-0.103928 0.276098,-0.029 0.341842,-0.04109 0.393235,-0.07614 0.03347,-0.02294 0.03945,-0.03625 0.04303,-0.08096 0.0023,-0.03021 0.0096,-0.06043 0.01552,-0.06767 0.006,-0.0072 0.07172,-0.01693 0.150602,-0.02177 0.245029,-0.01449 0.46257,-0.06767 0.565349,-0.135344 0.06454,-0.0435 0.06813,-0.06405 0.02272,-0.136555 -0.02031,-0.03383 -0.03466,-0.0701 -0.03108,-0.07976 0.0036,-0.0097 0.03227,-0.01933 0.06455,-0.02417 0.277288,-0.03625 0.638261,-0.141376 0.690845,-0.198191 0.01555,-0.01813 0.01314,-0.029 -0.0251,-0.103913 -0.0502,-0.102723 -0.0502,-0.102723 0.113549,-0.138985 0.172119,-0.03867 0.362155,-0.10272 0.513958,-0.176435 l 0.135064,-0.06526 -0.03944,-0.04833 c -0.08008,-0.09789 -0.08606,-0.107561 -0.07888,-0.124476 0.0036,-0.0097 0.03107,-0.01936 0.06813,-0.02417 0.07649,-0.0097 0.395623,-0.117224 0.491243,-0.166781 0.09323,-0.04712 0.09323,-0.07008 0.0048,-0.186097 -0.09324,-0.124468 -0.09085,-0.131717 0.05857,-0.181272 0.120723,-0.03987 0.389645,-0.17039 0.482879,-0.234441 0.105178,-0.07251 0.107574,-0.09183 0.01553,-0.188511 -0.03944,-0.0423 -0.07292,-0.08218 -0.07292,-0.08822 0,-0.01813 0.04423,-0.04712 0.215166,-0.141389 0.157754,-0.08701 0.241424,-0.141395 0.374105,-0.239278 l 0.08127,-0.05921 -0.06096,-0.06526 c -0.08127,-0.08701 -0.07888,-0.109967 0.01793,-0.148644 0.125503,-0.04954 0.448212,-0.281575 0.448212,-0.321445 0,-0.0085 -0.01912,-0.03868 -0.04183,-0.06768 -0.02272,-0.029 -0.04184,-0.05922 -0.04184,-0.06768 0,-0.0084 0.03945,-0.03745 0.08726,-0.06525 0.121922,-0.0701 0.272524,-0.171604 0.323915,-0.216313 0.0502,-0.04471 0.05498,-0.08219 0.01793,-0.135341 -0.01434,-0.01933 -0.02391,-0.03747 -0.0215,-0.03989 0.0023,-0.0024 0.08605,-0.06284 0.18407,-0.132931 0.222315,-0.16073 0.337051,-0.229606 0.497219,-0.299695 0.104097,-0.04519 0.258262,-0.104454 0.405215,-0.15717 h 2.59e-4 l 5.18e-4,-0.211444 h -2.59e-4 c -0.06639,0.0047 -0.130751,0.0112 -0.18571,0.01936 -0.441044,0.06526 -0.745842,0.122063 -0.821145,0.153489 -0.04183,0.01813 -0.08963,0.03866 -0.107563,0.04592 -0.01038,0.0044 -0.01811,0.0069 -0.02515,0.0069 -0.01242,0 -0.02272,-0.0077 -0.04178,-0.02618 -0.02124,-0.02085 -0.04154,-0.03112 -0.07109,-0.03112 -0.02867,0 -0.06603,0.0097 -0.12135,0.0287 -0.130283,0.04472 -0.272514,0.118433 -0.368134,0.192156 -0.06616,0.05051 -0.09838,0.07326 -0.119072,0.07326 -0.01594,0 -0.02502,-0.0135 -0.03751,-0.03823 -0.01314,-0.02538 -0.03466,-0.0568 -0.049,-0.06889 -0.01206,-0.01101 -0.01858,-0.01674 -0.02833,-0.01677 h -2.23e-4 c -0.01056,3.9e-5 -0.02489,0.0067 -0.05392,0.02041 -0.107567,0.05317 -0.29641,0.188521 -0.376494,0.270702 -0.04283,0.04447 -0.08005,0.07987 -0.08453,0.07987 -1.5e-4,0 -2.59e-4,-4.4e-5 -2.59e-4,-1.23e-4 -0.0023,-0.0024 -0.01912,-0.04834 -0.03705,-0.101506 -0.01793,-0.05317 -0.03705,-0.101507 -0.04183,-0.107552 -0.0026,-0.0026 -0.007,-0.0038 -0.01317,-0.0039 h -5.18e-4 c -0.05134,2.3e-4 -0.214803,0.08389 -0.33185,0.174256 -0.02868,0.02177 -0.098,0.08218 -0.154178,0.134145 -0.05619,0.05076 -0.10997,0.09304 -0.120724,0.09304 -0.01196,0 -0.03586,-0.03262 -0.06215,-0.08217 -0.02272,-0.04471 -0.0514,-0.09062 -0.06215,-0.101507 -0.0094,-0.0095 -0.01501,-0.01431 -0.02311,-0.01436 h -2.53e-4 c -0.0084,4.7e-5 -0.01946,0.0052 -0.03999,0.01557 -0.109965,0.05196 -0.406385,0.3299 -0.439852,0.409666 -0.0095,0.02538 -0.02391,0.04471 -0.02988,0.04471 -0.01912,0 -0.06813,-0.08338 -0.09084,-0.153483 -0.01076,-0.03503 -0.02868,-0.07491 -0.04063,-0.08942 l -0.02031,-0.02538 -0.07651,0.05921 c -0.102785,0.07735 -0.276098,0.245321 -0.31793,0.309366 -0.04183,0.06285 -0.07769,0.105138 -0.08964,0.105138 -0.006,0 -0.03227,-0.03262 -0.05856,-0.07251 -0.03587,-0.05317 -0.05618,-0.07251 -0.0765,-0.07251 -0.05259,0 -0.386065,0.364957 -0.455392,0.497888 -0.02388,0.04471 -0.04661,0.08338 -0.05259,0.08701 -2.59e-4,2.56e-4 -7.77e-4,2.61e-4 -10e-4,2.61e-4 -0.0058,0 -0.02016,-0.0219 -0.0335,-0.05112 -0.04065,-0.09063 -0.09562,-0.171614 -0.117138,-0.171614 -0.04422,0 -0.328693,0.310588 -0.441054,0.482194 -0.04066,0.06239 -0.06852,0.09224 -0.08843,0.09224 -0.01286,0 -0.02238,-0.01245 -0.0299,-0.03666 -0.02153,-0.0713 -0.03824,-0.09547 -0.0992,-0.136562 -0.03467,-0.02297 -0.06335,-0.04591 -0.06335,-0.05195 0,-0.0048 0.04184,-0.03143 0.09323,-0.05922 0.233075,-0.129303 0.513954,-0.331123 0.55699,-0.400006 0.01912,-0.03142 0.01912,-0.03263 -0.01314,-0.058 -0.01793,-0.01452 -0.05259,-0.03867 -0.0753,-0.05317 -0.02269,-0.01572 -0.04183,-0.03505 -0.04183,-0.04471 0,-0.0097 0.06694,-0.06043 0.149409,-0.112397 0.253384,-0.161926 0.537857,-0.393952 0.537857,-0.438662 0,-0.0097 -0.04064,-0.04714 -0.08965,-0.08338 -0.049,-0.03747 -0.08963,-0.07493 -0.08963,-0.0846 0,-0.0097 0.02031,-0.0278 0.04541,-0.04109 0.09801,-0.05075 0.468537,-0.398784 0.468537,-0.441089 0,-0.01088 -0.0251,-0.03747 -0.05498,-0.0592 -0.09921,-0.06889 -0.103991,-0.07493 -0.09563,-0.101506 0.0048,-0.01452 0.06575,-0.07856 0.136262,-0.143817 0.192437,-0.176446 0.313161,-0.296077 0.351402,-0.348052 0.03108,-0.04471 0.03228,-0.04833 0.01436,-0.06887 -0.02153,-0.02417 -0.117135,-0.06405 -0.18646,-0.07614 -0.102787,-0.01933 -0.08247,-0.0701 0.09921,-0.257413 0.176894,-0.183679 0.291641,-0.327488 0.320328,-0.406035 0.01793,-0.04713 -0.0072,-0.06768 -0.118335,-0.09788 -0.136259,-0.03627 -0.141033,-0.04955 -0.05737,-0.130524 0.09801,-0.09546 0.308387,-0.427792 0.308387,-0.485804 0,-0.02417 -0.02512,-0.03746 -0.119533,-0.06162 -0.04304,-0.01088 -0.08247,-0.02417 -0.08845,-0.03022 -0.01076,-0.01088 0.01314,-0.04833 0.149399,-0.225982 0.101599,-0.131715 0.20798,-0.311782 0.227097,-0.381873 0.01555,-0.06042 0.0023,-0.07614 -0.0741,-0.08458 -0.06574,-0.0085 -0.118333,-0.03505 -0.118333,-0.06042 0,-0.0097 0.01436,-0.02901 0.03107,-0.04592 0.06216,-0.05681 0.26893,-0.352878 0.326314,-0.466473 0.02988,-0.05921 0.0251,-0.06284 -0.06813,-0.0725 -0.138655,-0.01452 -0.142239,-0.0411 -0.0263,-0.227201 0.145816,-0.234435 0.204384,-0.37583 0.166141,-0.399993 -0.0096,-0.006 -0.04064,-0.01933 -0.07053,-0.02901 -0.05617,-0.01931 -0.07291,-0.04591 -0.04541,-0.0737 0.03467,-0.03626 0.07052,-0.09669 0.139845,-0.236858 0.09681,-0.196982 0.09801,-0.204231 0.04542,-0.227193 -0.05976,-0.02538 -0.06335,-0.05196 -0.02031,-0.138975 0.02031,-0.04109 0.05378,-0.118425 0.07291,-0.172794 0.117135,-0.323888 0.209179,-0.513616 0.366943,-0.760135 0.113551,-0.177647 0.145826,-0.240494 0.145826,-0.281575 0,-0.02174 0.006,-0.03021 0.02391,-0.03021 0.0251,0 0.03347,-0.02901 0.01196,-0.04229 -0.0018,-0.0013 -0.0043,-0.0018 -0.0073,-0.0018 h -2.59e-4 c -0.03378,2.07e-4 -0.135237,0.07141 -0.257712,0.183085 -0.144623,0.131718 -0.455393,0.472512 -0.513959,0.563135 -0.02391,0.03869 -0.04661,0.05922 -0.06933,0.06284 -0.06096,0.01329 -0.260559,0.251354 -0.31793,0.37825 -0.02148,0.04975 -0.03855,0.07308 -0.06074,0.07308 -0.01609,0 -0.03487,-0.01227 -0.05998,-0.03562 l -0.0275,-0.02417 -0.02987,0.0278 c -0.04304,0.04109 -0.158973,0.240471 -0.194828,0.335944 -0.01674,0.04473 -0.03467,0.08822 -0.04183,0.09548 -0.0073,0.01 -0.0163,0.01499 -0.02679,0.01499 -0.01868,0 -0.04204,-0.01588 -0.06884,-0.0476 -0.02272,-0.02659 -0.04661,-0.04835 -0.05378,-0.04835 -0.04662,0 -0.199607,0.292448 -0.224711,0.430209 -0.0048,0.0254 -0.01434,0.05075 -0.0215,0.05561 -10e-4,7.85e-4 -0.0027,10e-4 -0.0049,10e-4 -0.01232,0 -0.04094,-0.0112 -0.07044,-0.02765 -0.03938,-0.02245 -0.06461,-0.03419 -0.08415,-0.03419 -0.02256,0 -0.03758,0.01567 -0.05808,0.0487 -0.09203,0.147432 -0.19243,0.381865 -0.205579,0.480964 -0.006,0.03988 -0.01314,0.07613 -0.01674,0.07975 -0.0016,0.0013 -0.0037,0.0021 -0.0064,0.0021 -0.01664,0 -0.05585,-0.02514 -0.121482,-0.07698 -0.04483,-0.03519 -0.0773,-0.05257 -0.103064,-0.05257 -0.02026,0 -0.03639,0.01075 -0.05111,0.03201 -0.07889,0.113595 -0.162559,0.340783 -0.182884,0.497888 -0.0072,0.0568 -0.01674,0.107542 -0.0215,0.113595 -5.18e-4,5.24e-4 -10e-4,5.24e-4 -0.0021,5.24e-4 -0.01084,0 -0.05636,-0.0242 -0.107919,-0.0586 -0.05498,-0.03624 -0.109957,-0.06646 -0.120716,-0.06646 -0.02629,0 -0.147013,0.245316 -0.201998,0.410881 -0.03108,0.09546 -0.03824,0.13413 -0.03944,0.235652 -0.0013,0.119638 -0.0013,0.120842 -0.03107,0.12447 -0.0013,1.57e-4 -0.0026,2.36e-4 -0.004,2.36e-4 -0.01936,0 -0.05611,-0.01517 -0.09286,-0.0377 -0.05466,-0.03302 -0.08442,-0.04838 -0.106681,-0.04838 -0.01765,0 -0.03059,0.0097 -0.0475,0.02783 -0.05977,0.06526 -0.143435,0.371001 -0.143435,0.524471 0,0.04351 -0.0036,0.08097 -0.0096,0.0846 -2.07e-4,1.13e-4 -5.17e-4,1.6e-4 -0.001,1.6e-4 -0.0084,0 -0.05786,-0.02462 -0.113835,-0.05696 -0.05592,-0.03246 -0.08721,-0.04988 -0.109691,-0.05 h -5.17e-4 c -0.02577,1.36e-4 -0.03997,0.02328 -0.06677,0.07296 -0.06574,0.122048 -0.164942,0.470097 -0.169727,0.600608 -0.0027,0.06817 -0.0102,0.100149 -0.03942,0.100149 -0.02311,0 -0.05978,-0.01999 -0.118349,-0.05787 -0.03705,-0.02313 -0.07412,-0.04024 -0.0876,-0.04033 h -2.23e-4 c -0.0013,10e-6 -0.0023,1.59e-4 -0.003,5.23e-4 -0.04901,0.01933 -0.107574,0.240481 -0.129084,0.491837 -0.01077,0.130519 -0.01912,0.178861 -0.03108,0.178861 -0.0023,0 -0.04065,-0.02294 -0.08487,-0.05197 -0.04541,-0.029 -0.08725,-0.05559 -0.09561,-0.06041 -10e-4,-5.24e-4 -0.0021,-10e-4 -0.0033,-10e-4 h -1.81e-4 c -0.0099,1.31e-4 -0.02549,0.02232 -0.04674,0.06744 -0.02988,0.06526 -0.04662,0.135346 -0.09084,0.372204 -0.0048,0.02297 -0.01196,0.128099 -0.01674,0.233239 -0.006,0.105122 -0.01314,0.193352 -0.01674,0.198184 -5.17e-4,5.23e-4 -0.0016,7.84e-4 -0.0028,7.84e-4 -0.0082,0 -0.029,-0.01015 -0.0498,-0.02488 -0.0251,-0.01693 -0.06933,-0.04834 -0.09801,-0.06768 -0.03384,-0.02436 -0.05832,-0.03646 -0.07755,-0.03646 -0.02083,0 -0.03548,0.01421 -0.04915,0.04251 -0.0478,0.10272 -0.08964,0.418137 -0.08964,0.677946 0,0.08217 -0.0023,0.148644 -0.006,0.148644 -0.0036,0 -0.05499,-0.0278 -0.113554,-0.06164 -0.05492,-0.03195 -0.08715,-0.04959 -0.108275,-0.04969 h -2.59e-4 c -0.02735,1.28e-4 -0.03601,0.03002 -0.05154,0.09683 -0.02868,0.125684 -0.04183,0.244104 -0.04899,0.47371 -0.0036,0.116015 -0.0096,0.229618 -0.01314,0.250168 l -0.006,0.03987 -0.04422,-0.02297 c -0.04781,-0.02417 -0.109968,-0.07855 -0.109968,-0.09425 0,-0.006 0.01555,-0.04835 0.03586,-0.09427 0.02034,-0.04833 0.03586,-0.106336 0.03586,-0.136547 0,-0.04472 -0.0048,-0.05317 -0.03108,-0.06284 -0.01672,-0.0072 -0.05856,-0.01209 -0.09323,-0.01209 -0.09921,0 -0.101587,-0.01449 -0.02272,-0.140184 0.07172,-0.114806 0.26774,-0.501511 0.297608,-0.587305 0.01674,-0.04955 0.01674,-0.05317 -0.006,-0.07251 -0.01434,-0.01088 -0.05738,-0.02297 -0.09561,-0.0278 -0.107574,-0.01209 -0.109967,-0.02297 -0.03706,-0.148633 0.102787,-0.182487 0.310757,-0.677955 0.310757,-0.744413 0,-0.03506 -0.01076,-0.03868 -0.141039,-0.04955 -0.05378,-0.0048 -0.101589,-0.01329 -0.10518,-0.01933 -0.0036,-0.006 0.01793,-0.05075 0.04901,-0.0991 0.102782,-0.160722 0.282072,-0.572806 0.285655,-0.654985 l 0.0013,-0.03625 -0.131478,-0.006 c -0.129091,-0.006 -0.131475,-0.006 -0.135061,-0.03625 -0.0023,-0.01933 0.01672,-0.06284 0.05139,-0.119641 0.02988,-0.04833 0.07051,-0.128097 0.09204,-0.175229 0.03346,-0.07854 0.152988,-0.424163 0.152988,-0.443499 0,-0.0029 -0.02148,-0.0045 -0.05434,-0.0045 -0.0214,0 -0.04764,7.85e-4 -0.07594,0.0021 -0.03451,0.0018 -0.06124,0.0027 -0.08165,0.0027 -0.03612,0 -0.05242,-0.003 -0.05701,-0.01 -0.0048,-0.0097 0.0084,-0.04109 0.03348,-0.07734 0.105173,-0.154695 0.216333,-0.532937 0.173305,-0.592153 -0.0091,-0.01201 -0.01612,-0.01742 -0.04215,-0.01742 -0.01848,0 -0.04655,0.0027 -0.09172,0.0077 -0.0459,0.0054 -0.07735,0.0082 -0.09853,0.0082 -0.03121,0 -0.04012,-0.0061 -0.04012,-0.01904 0,-0.006 0.0263,-0.05317 0.05857,-0.105132 0.100397,-0.164357 0.185262,-0.389131 0.186458,-0.493049 v -0.06043 l -0.04422,-0.0036 c -0.0032,-2.62e-4 -0.007,-5.23e-4 -0.01136,-5.23e-4 -0.02903,0 -0.08296,0.0066 -0.12968,0.01496 -0.06309,0.0125 -0.103527,0.01855 -0.127288,0.01855 -0.0199,0 -0.02809,-0.0042 -0.02809,-0.01251 0,-0.0072 0.0215,-0.06284 0.049,-0.122048 0.09801,-0.222354 0.166138,-0.488219 0.166138,-0.654996 0,-0.07009 0.0066,-0.09141 -0.04174,-0.09141 -0.02582,0 -0.06736,0.0061 -0.133957,0.01407 -0.04988,0.0053 -0.09398,0.0087 -0.115443,0.0087 -0.0079,0 -0.01268,-5.24e-4 -0.01366,-0.0013 -0.0036,-0.0024 0.01196,-0.04592 0.03467,-0.09547 0.08368,-0.187308 0.144633,-0.422952 0.136262,-0.532929 -0.003,-0.04045 -0.0096,-0.05722 -0.05407,-0.05722 -0.02727,0 -0.06877,0.0063 -0.132386,0.01735 -0.0523,0.0095 -0.08783,0.01418 -0.109783,0.01418 -0.01418,0 -0.02272,-0.0018 -0.02647,-0.0057 -0.0084,-0.0085 -0.0048,-0.03505 0.01314,-0.08943 0.03825,-0.118425 0.05977,-0.280361 0.06813,-0.526886 0.0072,-0.210272 0.006,-0.22841 -0.01434,-0.253773 -0.01252,-0.01536 -0.0185,-0.02221 -0.0342,-0.02226 h -2.58e-4 c -0.01276,3.1e-5 -0.03189,0.0045 -0.06594,0.01258 -0.04975,0.01258 -0.09547,0.01952 -0.121343,0.01952 -0.01389,0 -0.0221,-0.0021 -0.0221,-0.0062 0,-0.0036 0.01074,-0.04472 0.02272,-0.09306 0.03586,-0.131718 0.05259,-0.306947 0.04661,-0.468873 -0.0023,-0.07976 -0.0072,-0.147427 -0.01076,-0.14986 -5.17e-4,-5.24e-4 -0.0016,-7.85e-4 -0.0029,-7.85e-4 h -1.37e-4 c -0.0099,3.6e-5 -0.04047,0.01005 -0.07468,0.02365 -0.06221,0.02657 -0.112208,0.04082 -0.139649,0.04082 -0.01,0 -0.017,-0.0018 -0.02052,-0.0058 -0.006,-0.006 0.0036,-0.05196 0.02031,-0.101519 0.0263,-0.07975 0.03108,-0.117222 0.03705,-0.311787 l 0.006,-0.219939 h -0.08008 c -0.04303,0 -0.07889,-0.0024 -0.07889,-0.006 0,-0.0024 0.0084,-0.03626 0.01793,-0.07492 0.01076,-0.03869 0.0215,-0.154695 0.0263,-0.258611 0.0072,-0.184906 0.0072,-0.190939 -0.0215,-0.235659 -0.02869,-0.04592 -0.02869,-0.05075 -0.0275,-0.325079 0.0013,-0.219937 0.0096,-0.35528 0.04064,-0.64652 0.02272,-0.225982 0.03585,-0.401211 0.03227,-0.453173 -0.0055,-0.08253 -0.04161,-0.215146 -0.05525,-0.215418 z"
     id="path65"
     style="display:inline;fill:#000000;fill-opacity:0.172549;stroke-width:0.26018;stroke-linejoin:miter" />
  <script
     id="script5398"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
  <path
     d="m 1.661135,39.951868 c 0.14588,-0.19748 -0.53035,0.29038 -0.50481,-1.04479 0.0548,-2.86277 0.003,-5.20707 0.0125,-5.20708 0.0114,0 0.032,-0.0231 0.0456,-0.0532 0.016,-0.0277 0.0775,-0.14556 0.13904,-0.25878 0.0615,-0.11553 0.1527,-0.28419 0.19827,-0.37662 0.0479,-0.0924 0.10029,-0.18021 0.11627,-0.19409 0.016,-0.0139 0.0297,-0.0324 0.0296,-0.0439 -1e-5,-0.0162 0.0684,-0.13401 0.15957,-0.27498 0.15504,-0.24032 0.23712,-0.36511 0.26449,-0.39514 0.0456,-0.0532 0.22565,-0.40897 0.25979,-0.51292 0.0159,-0.0508 0.041,-0.11782 0.0592,-0.15016 0.0182,-0.0347 0.0319,-0.0739 0.0319,-0.0855 -4e-5,-0.0254 0.17539,-0.40892 0.23694,-0.51982 0.0182,-0.0323 0.0661,-0.12476 0.10711,-0.20794 0.041,-0.0832 0.10484,-0.19408 0.13904,-0.24723 0.0365,-0.0532 0.0798,-0.1294 0.10029,-0.1733 0.0182,-0.0416 0.0638,-0.12245 0.1003,-0.18022 0.0365,-0.0578 0.098,-0.16175 0.13448,-0.23338 0.0387,-0.0716 0.098,-0.1756 0.13449,-0.23105 0.057,-0.0832 0.14362,-0.24032 0.25757,-0.45981 0.0661,-0.1294 0.33949,-0.72085 0.33947,-0.737 -10e-6,-0.0116 0.0137,-0.0323 0.0319,-0.0462 0.0182,-0.0162 0.0388,-0.0555 0.0479,-0.0878 0.007,-0.0323 0.0729,-0.18483 0.14579,-0.3396 0.0752,-0.15481 0.14127,-0.30497 0.15037,-0.3327 0.009,-0.03 0.0478,-0.10166 0.0866,-0.15941 0.041,-0.0578 0.0889,-0.12712 0.10717,-0.15486 0.0639,-0.097 0.15733,-0.23339 0.23942,-0.34894 0.0433,-0.0647 0.11857,-0.17331 0.16418,-0.24264 0.0433,-0.0693 0.10942,-0.16868 0.14363,-0.21953 0.0342,-0.0508 0.0844,-0.12941 0.10943,-0.17331 0.10942,-0.19408 0.3328,-0.57534 0.39208,-0.6701 0.0365,-0.0577 0.0889,-0.14094 0.11399,-0.18486 0.0456,-0.0786 0.17783,-0.27498 0.23485,-0.34662 0.016,-0.0185 0.0889,-0.11324 0.16649,-0.20801 0.0753,-0.0948 0.15735,-0.20338 0.18244,-0.24036 0.10032,-0.15483 0.12313,-0.1895 0.15732,-0.24957 0.0182,-0.0346 0.057,-0.097 0.0866,-0.14094 0.0274,-0.0416 0.0912,-0.15714 0.14132,-0.25649 0.0615,-0.12014 0.14134,-0.23107 0.24172,-0.3351 0.1939,-0.19648 0.34001,-0.24976 0.77163,-0.28028 0.16215,-0.009 0.31285,-0.0304 0.33796,-0.0419 0.0228,-0.0139 0.1096,-0.0301 0.18952,-0.0395 0.17812,-0.0187 0.47721,-0.0998 0.52742,-0.14375 0.0205,-0.0162 0.0867,-0.044 0.14838,-0.0625 0.4612,-0.12984 0.59589,-0.18079 0.7625,-0.27795 0.21455,-0.12264 0.703022,-0.36566 0.867395,-0.42819 0.479405,-0.185273 0.636973,-0.201609 0.785546,-0.08864 0.09143,0.07148 0.173833,0.23072 0.173942,0.33694 9.8e-5,0.0808 0.0825,0.24699 0.137338,0.27001 0.01829,0.009 0.223855,0.0228 0.456815,0.0318 0.452218,0.0179 0.957009,0.0728 1.167191,0.12798 0.07082,0.0184 0.164461,0.0321 0.205577,0.0321 0.146164,-1.6e-4 0.360989,0.12659 0.550771,0.32727 0.09833,0.10148 0.178372,0.19608 0.17838,0.20761 5e-6,0.0138 0.03433,0.0646 0.0755,0.11768 0.03888,0.0508 0.0892,0.11767 0.107504,0.14536 0.01829,0.0277 0.0915,0.13844 0.162425,0.24457 0.217326,0.32765 0.258515,0.39688 0.308889,0.50303 0.01832,0.0439 0.07554,0.16618 0.125901,0.26771 0.04807,0.10386 0.08929,0.1985 0.08931,0.21236 2e-5,0.0254 0.141962,0.32772 0.2541,0.53543 0.03662,0.0692 0.123607,0.24692 0.19229,0.39233 0.07095,0.14538 0.148788,0.30462 0.171688,0.35079 0.05949,0.11077 0.05967,0.27932 -0.0018,0.46181 -0.05235,0.1617 -0.15031,0.38119 -0.193646,0.43434 -0.03193,0.0393 -0.239305,0.45747 -0.362324,0.72779 -0.04556,0.10165 -0.09113,0.20101 -0.102536,0.21948 -0.01139,0.0185 -0.05241,0.10166 -0.09114,0.18484 -0.03873,0.0832 -0.08431,0.17559 -0.100259,0.20793 -0.01824,0.0324 -0.07066,0.12938 -0.118522,0.21951 -0.04559,0.0878 -0.11168,0.20333 -0.145879,0.25417 -0.12541,0.18486 -0.186911,0.33272 -0.189069,0.44819 -0.0044,0.14086 0.0299,0.1916 0.256228,0.3853 0.155454,0.13146 0.244563,0.17755 0.493571,0.2419 0.130226,0.0345 0.621235,0.0109 0.707962,-0.0331 0.03881,-0.0208 0.207742,-0.0903 0.376679,-0.15514 0.168925,-0.0672 0.381229,-0.15515 0.467965,-0.19682 0.08902,-0.0417 0.184905,-0.0833 0.214587,-0.0926 0.02969,-0.009 0.111846,-0.0555 0.182584,-0.10181 0.178022,-0.11795 0.187156,-0.12258 0.481601,-0.26838 0.346952,-0.17359 0.413141,-0.2083 0.479325,-0.25688 0.0388,-0.0277 0.189469,-0.0833 0.399509,-0.14823 0.07536,-0.0232 0.162106,-0.0487 0.194065,-0.0603 0.09589,-0.0301 0.474786,-0.23145 0.543249,-0.28925 0.0365,-0.0301 0.116369,-0.0879 0.175712,-0.1249 0.06162,-0.0393 0.148346,-0.0949 0.196277,-0.12722 0.209944,-0.1411 0.308074,-0.20818 0.330896,-0.22666 0.01141,-0.0116 0.04793,-0.0347 0.07987,-0.0509 0.02968,-0.0162 0.09815,-0.0671 0.148335,-0.11332 0.09584,-0.0832 0.228179,-0.18267 0.362831,-0.26826 0.193998,-0.12262 0.280706,-0.18968 0.387939,-0.28678 0.173393,-0.16415 0.433535,-0.36764 0.670874,-0.52955 0.230487,-0.15499 0.394795,-0.2914 0.65259,-0.53647 0.08897,-0.0832 0.237277,-0.21039 0.330842,-0.2844 0.618394,-0.48098 0.844277,-0.67752 0.844215,-0.73295 -3.3e-5,-0.03 0.287488,-0.2474 0.387925,-0.29368 0.05706,-0.0278 0.162068,-0.0764 0.232837,-0.1088 0.07075,-0.0324 0.146097,-0.0602 0.164357,-0.0602 0.01829,0 0.08906,-0.0209 0.157552,-0.0464 0.273945,-0.10422 0.682756,-0.10006 0.915831,0.006 0.349601,0.16125 0.530583,0.64826 0.35505,0.95096 -0.07066,0.12247 -0.250848,0.3305 -0.358109,0.41144 -0.04564,0.0347 -0.171123,0.15028 -0.278351,0.25431 -0.109494,0.10403 -0.253234,0.24274 -0.319389,0.30748 -0.06844,0.067 -0.175657,0.17801 -0.234963,0.24964 -0.06159,0.0717 -0.180214,0.18724 -0.264658,0.25432 -0.08441,0.0694 -0.234984,0.20809 -0.335365,0.3098 -0.09811,0.0994 -0.246395,0.23812 -0.328543,0.30518 -0.134619,0.11327 -0.32855,0.2913 -0.476838,0.43926 -0.03195,0.0324 -0.0867,0.0763 -0.120929,0.0971 -0.03424,0.0231 -0.0753,0.0647 -0.09126,0.0948 -0.07294,0.13401 -0.310069,0.47602 -0.401305,0.58235 -0.301095,0.34441 -0.720873,0.73974 -0.910314,0.85772 -0.182581,0.11337 -0.632051,0.52721 -1.181836,1.08432 -0.342204,0.34677 -0.454001,0.44386 -0.695922,0.59423 -0.03195,0.0185 -0.134668,0.0694 -0.228264,0.10878 -0.422305,0.18523 -0.524999,0.25462 -0.524901,0.34697 4.4e-5,0.037 0.01379,0.0785 0.03207,0.0923 0.05486,0.0461 0.226171,0.0529 0.43396,0.0157 0.111877,-0.0209 0.308281,-0.0373 0.438455,-0.0374 0.127899,-1.5e-4 0.260354,-0.009 0.292305,-0.0234 0.03197,-0.0116 0.173548,-0.0325 0.315133,-0.0465 0.141569,-0.014 0.349373,-0.0466 0.458971,-0.0721 0.111885,-0.0232 0.242038,-0.0442 0.292287,-0.0442 0.05024,-6e-5 0.168987,-0.0187 0.267173,-0.0442 0.09589,-0.0232 0.310519,-0.0673 0.472654,-0.0952 0.321956,-0.0558 0.420137,-0.0767 0.52515,-0.11145 0.03882,-0.0139 0.162106,-0.051 0.273978,-0.0857 0.114151,-0.0325 0.237431,-0.0765 0.278527,-0.0973 0.03879,-0.0185 0.111859,-0.044 0.159805,-0.0556 0.205487,-0.0441 0.470351,-0.11599 0.509131,-0.13682 0.02285,-0.0139 0.121011,-0.0348 0.214643,-0.0487 0.0959,-0.0116 0.207781,-0.0372 0.248874,-0.0534 0.0388,-0.0185 0.125578,-0.0394 0.187226,-0.0487 0.06851,-0.009 0.221459,-0.0695 0.378957,-0.14819 0.164339,-0.0856 0.312729,-0.14353 0.399499,-0.15749 0.07993,-0.0139 0.335711,-0.0165 0.625766,-0.008 0.47736,0.0133 0.495633,0.0156 0.630444,0.0778 0.166797,0.0806 0.31773,0.25363 0.39333,0.45907 0.05269,0.14311 0.05731,0.19158 0.02774,0.30476 l 4.2e-5,-1.1e-4 c -0.08413,0.33032 -0.335093,0.55922 -0.784863,0.70751 -0.114136,0.0371 -0.232852,0.0811 -0.26481,0.0996 -0.03196,0.0185 -0.0936,0.0394 -0.136974,0.0486 -0.04339,0.009 -0.146107,0.051 -0.22828,0.0926 -0.321849,0.16433 -0.451963,0.21989 -0.604943,0.25471 -0.08906,0.0209 -0.221475,0.058 -0.296813,0.0835 -0.07534,0.0232 -0.152965,0.044 -0.171238,0.0441 -0.02057,3e-5 -0.07535,0.0209 -0.125555,0.0463 -0.05022,0.0254 -0.10045,0.0463 -0.114159,0.0463 -0.01369,1e-5 -0.05936,0.0185 -0.102725,0.044 -0.04336,0.0232 -0.125557,0.051 -0.18263,0.058 -0.155278,0.0256 -0.433828,0.1044 -0.536538,0.15302 -0.09132,0.0417 -0.397188,0.18747 -0.627742,0.29626 -0.06848,0.0324 -0.141512,0.0718 -0.159767,0.0879 -0.111808,0.0902 -0.557018,0.22694 -0.856152,0.26192 -0.100484,0.0117 -0.212369,0.0326 -0.246607,0.0465 -0.03653,0.0139 -0.109603,0.0255 -0.164422,0.0256 -0.1416,1.6e-4 -0.78552,0.11171 -0.879103,0.15339 -0.04338,0.0185 -0.136989,0.0487 -0.205484,0.0672 -0.06849,0.0186 -0.203191,0.0534 -0.299105,0.0765 -0.09589,0.0255 -0.194065,0.0557 -0.216887,0.0695 -0.05706,0.0301 -0.470377,0.0929 -0.728426,0.10937 -0.246633,0.0164 -0.433893,0.049 -0.561727,0.093 -0.0525,0.0185 -0.13242,0.0348 -0.178105,0.0348 -0.04568,4e-5 -0.139297,0.0163 -0.207789,0.0349 -0.06849,0.0186 -0.237466,0.0465 -0.374486,0.0582 -0.137017,0.014 -0.258041,0.0303 -0.271734,0.0396 -0.02055,0.0116 -0.09819,0.0232 -0.598286,0.0746 -0.376799,0.042 -0.513747,0.11142 -0.481625,0.24764 0.01377,0.0554 0.164681,0.21685 0.201222,0.21681 0.01141,-4e-5 0.05942,0.03 0.105131,0.0668 0.04571,0.0369 0.125713,0.0899 0.175988,0.11988 0.159969,0.0899 0.41362,0.21888 0.459318,0.235 0.02285,0.009 0.05941,0.0253 0.07769,0.0369 0.114271,0.0738 0.436434,0.1981 0.57121,0.22104 0.0571,0.009 0.148481,0.0298 0.205603,0.0482 0.159927,0.0483 0.719577,0.14697 0.85204,0.14682 0.06624,0.002 0.159889,0.0183 0.210167,0.0367 0.278747,0.10819 0.422645,0.13113 0.742373,0.1146 0.735366,-0.0332 1.023109,-0.0612 1.121259,-0.10288 0.05479,-0.0232 0.189501,-0.0556 0.299106,-0.0742 0.162137,-0.0256 0.223803,-0.0256 0.342589,-2.6e-4 0.187314,0.0368 0.543777,0.20952 0.706083,0.34095 0.210317,0.17064 0.308801,0.42453 0.251948,0.64625 -0.02958,0.10859 -0.198363,0.30505 -0.262309,0.30512 -0.02054,10e-6 -0.08676,0.0232 -0.146115,0.0487 -0.08902,0.0417 -0.17352,0.0533 -0.484088,0.0698 -0.207838,0.01 -0.43847,0.0328 -0.513827,0.0537 -0.07533,0.0186 -0.203209,0.0372 -0.28543,0.0373 -0.08222,8e-5 -0.223801,0.021 -0.317407,0.0465 -0.09361,0.0255 -0.212351,0.0464 -0.262588,0.0465 -0.05253,0.002 -0.139313,0.0117 -0.196388,0.0233 -0.06393,0.0139 -0.203256,0.0118 -0.372289,-0.004 -0.228399,-0.0205 -0.306045,-0.0181 -0.506996,0.0144 -0.200937,0.0349 -0.422455,0.0397 -1.44793,0.0432 -1.425108,0.004 -1.2515,0.0337 -1.71776,-0.28208 -0.333701,-0.2236 -0.365688,-0.24204 -0.532517,-0.33188 -0.07769,-0.0415 -0.221663,-0.11753 -0.322201,-0.17285 -0.10056,-0.053 -0.198826,-0.1106 -0.219405,-0.12905 -0.01829,-0.0184 -0.04571,-0.0323 -0.05713,-0.0323 -0.01371,3e-5 -0.05941,-0.0276 -0.102844,-0.0599 -0.06629,-0.0507 -0.342819,-0.22127 -0.580504,-0.35955 -0.07541,-0.0438 -0.482161,-0.24653 -0.662685,-0.32945 -0.150806,-0.0691 -0.32216,-0.12666 -0.379259,-0.12658 -0.02513,2e-5 -0.07995,-0.0161 -0.125651,-0.0345 -0.04341,-0.0184 -0.198753,-0.0552 -0.344951,-0.0804 -0.230712,-0.0436 -0.285537,-0.0458 -0.404268,-0.0227 -0.07764,0.0163 -0.189519,0.0372 -0.253457,0.0488 -0.06165,0.0116 -0.143843,0.0348 -0.182653,0.0533 -0.03652,0.0162 -0.10958,0.0417 -0.159809,0.0556 -0.05023,0.0139 -0.162101,0.051 -0.251125,0.0858 -0.08675,0.0347 -0.207758,0.0718 -0.269398,0.0834 -0.116459,0.0256 -0.39954,0.12746 -0.438328,0.15984 -0.01369,0.0116 -0.132398,0.0579 -0.262528,0.10189 -0.34473,0.11586 -0.4292,0.15058 -0.48626,0.18531 -0.0274,0.0185 -0.0867,0.0393 -0.13012,0.0486 -0.0434,0.009 -0.16209,0.0579 -0.26481,0.10652 -0.105,0.0509 -0.20316,0.0903 -0.21915,0.0903 -0.016,0 -0.0639,0.0208 -0.10501,0.0463 -0.0411,0.0254 -0.0845,0.0463 -0.0959,0.0463 -0.0434,6e-5 -0.70079,0.31946 -0.71903,0.3495 -0.007,0.009 -0.0457,0.0255 -0.0868,0.0324 -0.0868,0.0209 -0.31047,0.12042 -0.35838,0.16205 -0.0183,0.0162 -0.0593,0.037 -0.0913,0.0463 -0.032,0.009 -0.0867,0.0394 -0.12098,0.0625 -0.0342,0.0255 -0.23052,0.12958 -0.43367,0.23141 -0.55011,0.27543 -0.66421,0.35406 -1.18214,0.81648 -0.64797,0.57801 -0.80534,-0.004 -0.92369,0.36294 0,0 -0.0191,0.24189 -0.10242,0.31185 -0.0824,0.0691 -0.23367,-0.0226 -0.31817,0.0438 -0.0655,0.0515 -0.0622,0.15555 -0.0934,0.23333 m 8.286414,-13.77317 c -0.04349,-0.09 -0.08927,-0.18002 -0.100714,-0.19848 -0.07552,-0.13615 -0.132771,-0.28156 -0.148871,-0.38083 -0.02992,-0.20317 -0.107683,-0.30931 -0.297349,-0.40146 -0.180524,-0.0898 -0.361025,-0.16352 -0.393004,-0.16348 -0.01599,2e-5 -0.09594,-0.0207 -0.173629,-0.0483 -0.153083,-0.0506 -0.25366,-0.13365 -0.361177,-0.29516 -0.139556,-0.2146 -0.308789,-0.41761 -0.356759,-0.4314 -0.125661,-0.0345 -0.226046,0.0603 -0.365049,0.33756 -0.0866,0.17326 -0.257702,0.33741 -0.565792,0.54788 -0.0502,0.0324 -0.21904,0.1896 -0.37645,0.34449 -0.15741,0.1549 -0.32169,0.30749 -0.36504,0.33755 -0.16888,0.11564 -0.2967,0.18045 -0.34924,0.1805 -0.13245,1.5e-4 -0.19638,0.0302 -0.25337,0.11576 -0.0319,0.0485 -0.0638,0.11783 -0.0729,0.1548 -0.0114,0.0577 -0.0387,0.1178 -0.18682,0.41123 -0.0205,0.037 -0.0615,0.10398 -0.0935,0.14789 -0.0319,0.0439 -0.0798,0.11323 -0.10488,0.15482 -0.0251,0.0416 -0.0912,0.14558 -0.14819,0.2334 -0.12997,0.19411 -0.34195,0.57073 -0.34191,0.60075 10e-6,0.0139 -0.0159,0.037 -0.0342,0.0531 -0.0571,0.0486 -0.0453,0.30719 0.021,0.44796 0.0481,0.10154 0.23333,0.32762 0.42539,0.52368 0.032,0.03 0.11433,0.11995 0.18292,0.19608 0.0686,0.0761 0.21951,0.2214 0.33153,0.32289 0.1143,0.0992 0.21717,0.19372 0.22862,0.20757 0.096,0.10379 0.57831,0.45423 0.70627,0.50951 0.0937,0.0438 0.22843,0.0367 0.29005,-0.0142 0.0297,-0.0231 0.13919,-0.10176 0.24417,-0.17347 0.10497,-0.0717 0.200812,-0.14109 0.216798,-0.15265 0.136896,-0.1156 0.287521,-0.22199 0.397088,-0.28215 0.07302,-0.0393 0.148343,-0.0856 0.16888,-0.10179 0.01824,-0.0185 0.04564,-0.0324 0.05706,-0.0324 0.05253,-7e-5 0.415298,-0.32838 0.556702,-0.50173 0.01824,-0.0231 0.07755,-0.0948 0.130008,-0.15716 0.09579,-0.11556 0.212053,-0.31428 0.211996,-0.36277 -7e-5,-0.0554 0.280198,-0.63763 0.39192,-0.81095 0.04788,-0.0739 0.08662,-0.14096 0.08662,-0.15019 -5e-6,-0.007 0.02507,-0.0508 0.05242,-0.0947 0.02964,-0.0462 0.114007,-0.17563 0.189239,-0.29117 0.225723,-0.34664 0.280413,-0.45522 0.282597,-0.5522 -5.2e-5,-0.0369 -0.0367,-0.14083 -0.08248,-0.23082 z"
     id="path1033"
     style="display:inline;mix-blend-mode:multiply;fill:url(#meshgradient1019);fill-opacity:1;stroke-width:0.26018;stroke-linejoin:miter" />
  <script
     id="script445"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
